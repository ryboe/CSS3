%YAML 1.2
---
name: CSS3
file_extensions: [css, css.erb, css.liquid]
scope: source.css

variables:
  an_plus_b: '[+-]?\d*n(?:\s*[+-]\s*\d+)?'
  angle_unit: turn|grad|rad|deg
  arithmetic_operator: '[-+*/]'
  attr_matcher: '[~^$*|]?='
  # \b word boundaries are not enough to prevent some mismatches, like "clip\b"
  # matching "clip-path". adding negative lookahead for dashes fixes this.
  b: '\b{{not_followed_by_dash}}'
  column: '\|\|'
  combinator: '(?:{{column}}|>{1,3}|[+~])'
  custom_property_name: '--{{identifier}}'
  decibel_unit: 'dB'
  escape: '\\(?:[^\n\r\f\h]|\h{1,6}{{whitespace}}?)'
  exponent: '[eE][+-]?\d+'
  flex_unit: 'fr'
  frequency_unit: k?Hz
  generic_font_family: 'system-ui|serif|sans-serif|monospace|math|fantasy|fangsong|emoji|cursive'
  hex_color: '(#)(?:\h{8}|\h{6}|\h{3,4})\b'
  ident_char: '[-a-zA-Z\d_\\\p{^ASCII}]'
  ident_start: '-?[a-zA-Z_\\\p{^ASCII}]'
  identifier: '{{ident_start}}{{ident_char}}*'
  integer: '[+-]?\d+'
  integer_non_neg: \+?\d+
  integer_pos: '\+?(?:[1-9]\d+|[1-9])'
  integer_zero_to_255: '\b(?:2[0-5][0-5]|1\d\d|[1-9]\d|\d)\b'
  length_unit: vw|vmin|vmax|vi|vh|vb|r?em|Q|q|px|pt|pc|mm|in|ic|ex|cm|ch
  moz: '(?:-moz-)?'
  ms: '(?:-ms-)?'
  not_followed_by_dash: '(?!-)'
  ns_prefix: '(?:{{identifier}}|(\*))?(\|)'
  number: '[+-]?(?:\d+\.\d+|\.\d+|\d+)(?:{{exponent}})?'
  number_non_neg: '\+?(?:\d+\.\d+|\.\d+|\d+)(?:{{exponent}})?'
  number_pos: '\+?(?:\d+\.\d*[1-9]\d*|\.\d*[1-9]\d*|[1-9]\d*)(?:{{exponent}})?'
  number_zero_to_100: '(?:\b100(?:\.0+)?|\b[1-9]\d(?:\.\d+)?|\b\d(?:\.\d+)?|\.\d+)'
  number_zero_to_255: '\b(?:2[0-4]\d(?:\.0+)?|25[0-5](?:\.0+)?|1\d\d(?:\.\d+)?|[1-9]\d(?:\.\d+)?|\d(?:\.\d+)?)'
  number_zero_to_one: '\+?(?:0(?:\.\d+)?|1(?:\.0+)?|\.\d+)\b(?!\.)'
  optional_min_max_prefix: '\b(?:min-|max-)?'
  optional_top_right_left_bottom: '(?:top-|right-|left-|bottom-)?'
  percentage_unit: '%'
  ratio: '({{integer_pos}})\s*(\/)\s*({{integer_pos}})'
  resolution_unit: dppx|dpi|dpcm
  semitones_unit: 'st'
  time_unit: m?s
  # '?' is a literal character that is legal in a <urange>
  unicode_range: '[uU]\+[\?\h]{1,6}(?:-[\?\h]{1,6})?'
  # '' is how you escape a single ' in YAML
  url_char: '[a-zA-Z0-9\-\._~:/\?#\[\]''@!$&()\*\+\%,;=]'
  vendor_prefix: '(?:-webkit-|-ms-|-moz-)?'
  webkit: '(?:-webkit-)?'
  whitespace: '[ \t\n]'
  wq_name: '({{ns_prefix}})?({{identifier}}|(\*))'
  zero: \b0\b

contexts:
  main:
    - include: comment
    - include: nestable-at-rules
    - include: at-color-profile
    - include: at-custom-selector
    - include: at-custom-media
    - include: at-namespace
    - include: at-charset
    - include: at-import
    - include: rule

  alpha-value:
    - include: percentage-zero-to-100
    - include: number-zero-to-one

  angle:
    - include: func-calc
    - match: '(?x)
        (?:
          ({{number}})({{angle_unit}})\b|
          ({{zero}})(?![-.\w%])
        )'
      captures:
        1: constant.numeric.css
        2: keyword.other.unit.css
        3: constant.numeric.css

  angular-color-stop:
    - include: color
    - include: angle
    - include: percentage

  animateable-feature:
    - match: '\b(?:scroll-position|contents){{b}}'
      scope: support.constant.property-value.css
    - include: identifier

  any-value:
    # We don't want to try to write a regex with every possible valid value,
    # including all keywords for each property. Therefore, we try to match every
    # valid unit, numeric type, and function. Any valid identifier after that is
    # assumed to be a valid property value.
    - include: value-css-wide  # includes "var()"
    - include: func-attr
    - include: func-blenda
    - include: func-blur
    - include: func-calc
    - include: func-child
    - include: func-cielab
    - include: func-cielchab
    - include: func-color
    - include: func-color-adjuster-rgb
    - include: func-conic-gradient
    - include: func-content
    - include: func-contrast
    - include: func-counter
    - include: func-counters
    - include: func-cross-fade
    - include: func-cubic-bezier
    - include: func-device-cmyk
    - include: func-device-gray
    - include: func-device-nchannel
    - include: func-device-rgb
    - include: func-drop-shadow
    - include: func-element
    - include: func-ellipse-circle
    - include: func-filter
    - include: func-fit-content
    - include: func-format
    - include: func-gray
    - include: func-hsla
    - include: func-hue
    - include: func-hue-rotate
    - include: func-hwb
    - include: func-icc-color
    - include: func-image
    - include: func-image-set
    - include: func-inset
    - include: func-leader
    - include: func-linear-gradient
    - include: func-local
    - include: func-matrix
    - include: func-minmax
    - include: func-path
    - include: func-perspective
    - include: func-polygon
    - include: func-radial-gradient
    - include: func-red-green-blue-alpha-a
    - include: func-repeat
    - include: func-rgba
    - include: func-rotate
    - include: func-rotate3d
    - include: func-running
    - include: func-select
    - include: func-scale
    - include: func-skew
    - include: func-snap-block
    - include: func-snap-inline
    - include: func-steps
    - include: func-string
    - include: func-swash-styleset-stylistic-ornaments-character-variant-annotation
    - include: func-symbols
    - include: func-target-counters
    - include: func-target-text
    - include: func-tint-shade
    - include: func-translate
    - include: func-translate-z
    - include: func-url
    - include: func-var
    - include: func-whiteness-saturation-lightness-blackness
    - include: image
    - include: string
    - include: angle
    - include: frequency
    - include: percentage
    - include: resolution
    - include: decibel
    - include: semitones
    - include: time
    - include: position
    - include: flex
    - include: length
    - include: an-plus-b
    - include: color
    - include: ratio
    - include: integer
    - include: number
    - include: identifier

  an-plus-b:
    - match: 'odd|even|{{an_plus_b}}'
      scope: constant.other.an-plus-b.css
    - include: integer

  arithmetic-operator:
    - match: '{{arithmetic_operator}}'
      scope: keyword.operator.arithmetic.css

  aspect-ratio:
    - match: '({{number}})(ar)'
      captures:
        1: constant.numeric.css
        2: keyword.other.unit.css

  attr-fallback:
    - include: string
    - include: color
    - include: func-url
    - include: frequency
    - include: angle
    - include: time
    - include: percentage
    - include: length
    - include: number

  at-apply:
    - match: '(@)apply{{b}}'
      captures:
        0: keyword.control.at-rule.apply.css
        1: punctuation.definition.keyword.css
      push:
        - match: ';'
          scope: punctuation.terminator.rule.css
          pop: true
        - match: '{{custom_property_name}}'
          scope: support.type.property-name.custom.css
    - include: stray-semicolon

  at-charset:
    - match: '(@)charset{{b}}'
      captures:
        0: keyword.control.at-rule.charset.css
        1: punctuation.definition.keyword.css
      push:
        - meta_scope: meta.at-rule.charset.css
        - match: ';'
          scope: punctuation.terminator.charset.css
          pop: true
        # This intentionally only matches UTF-8.
        - match: '''utf-8''|''UTF-8''|"utf-8"|"UTF-8"'
          scope: string.quoted.charset.css
    - include: stray-semicolon

  at-color-profile:
    - match: '(@)color-profile{{b}}'
      captures:
        0: keyword.control.at-rule.color-profile.css
        1: punctuation.definition.keyword.css
      push:
        - meta_scope: meta.at-rule.color-profile.css
        - match: '}'
          scope: punctuation.section.at-color-profile.end.css
          pop: true
        - match: '{'
          scope: punctuation.section.at-color-profile.begin.css
          push:
            - meta_scope: meta.at-rule.color-profile.block.css
            - match: '(?=})'
              pop: true
            - include: descriptors-color-profile
        - include: identifier
    - include: stray-brace

  at-counter-style:
    - match: '(@)counter-style{{b}}'
      captures:
        0: keyword.control.at-rule.counter-style.css
        1: punctuation.definition.keyword.css
      push:
        - meta_scope: meta.at-rule.counter-style.css
        - match: '}'
          scope: punctuation.section.at-counter-style.end.css
          pop: true
        - match: '{'
          scope: punctuation.section.at-counter-style.begin.css
          push:
            - meta_scope: meta.at-rule.counter-style.block.css
            - match: '(?=})'
              pop: true
            - include: descriptors-counter-style
        - match: '\b(?:unset|revert|none|initial|inherit|disc|decimal){{b}}'
          scope: invalid.illegal.counter-style-name.css
        - include: identifier
    - include: stray-brace

  at-custom-media:
    - match: '(@)custom-media{{b}}'
      captures:
        0: keyword.control.at-rule.custom-media.css
        1: punctuation.definition.keyword.css
      push:
        - meta_scope: meta.at-rule.custom-media.css
        - match: ';'
          scope: punctuation.terminator.custom-media.css
          pop: true
        - match: '\b(?:true|false){{b}}'
          scope: support.constant.property-value.css
        - include: media-feature
        - include: media-feature-custom
    - include: stray-semicolon

  at-custom-selector:
    - match: '(@)custom-selector{{b}}'
      captures:
        0: keyword.control.at-rule.custom-selector.css
        1: punctuation.definition.keyword.css
      push:
        - meta_scope: meta.at-rule.custom-selector.css
        - match: ';'
          scope: punctuation.terminator.custom-selector.css
          pop: true
        - include: selector-custom
        - include: selector-list
    - include: stray-semicolon

  at-font-face:
    - match: '(@)font-face{{b}}'
      captures:
        0: keyword.control.at-rule.font-face.css
        1: punctuation.definition.keyword.css
      push:
        - meta_scope: meta.at-rule.font-face.css
        - match: '}'
          scope: punctuation.section.at-font-face.end.css
          pop: true
        - match: '{'
          scope: punctuation.section.at-font-face.begin.css
          push:
            - meta_scope: meta.at-rule.font-face.block.css
            - match: '(?=})'
              pop: true
            - include: descriptors-font-face
    - include: stray-brace

  at-font-feature-values:
    - match: '(@)font-feature-values{{b}}'
      captures:
        0: keyword.control.at-rule.font-feature-values.css
        1: punctuation.definition.keyword.css
      push:
        - meta_scope: meta.at-rule.font-feature-values.css
        - match: '}'
          scope: punctuation.section.at-font-feature-values.end.css
          pop: true
        - match: '{'
          scope: punctuation.section.at-font-feature-values.begin.css
          push:
            - meta_scope: meta.at-rule.font-feature-values.block.css
            - match: '(?=})'
              pop: true
            - include: font-feature-type-rule
        - include: string
        - include: identifier
    - include: stray-brace

  at-font-palette-values:
    - match: '(@)font-palette-values{{b}}'
      captures:
        0: keyword.control.at-rule.font-palette-values.css
        1: punctuation.definition.keyword.css
      push:
        - meta_scope: meta.at-rule.font-palette-values.css
        - match: '}'
          scope: punctuation.section.at-font-palette-values.end.css
          pop: true
        - match: '{'
          scope: punctuation.section.at-font-palette-values.begin.css
          push:
            - meta_scope: meta.at-rule.font-palette-values.block.css
            - match: '(?=})'
              pop: true
            - include: descriptors-font-palette-values
        - include: identifier
    - include: stray-brace

  at-import:
    - match: '(@)import{{b}}'
      captures:
        0: keyword.control.at-rule.import.css
        1: punctuation.definition.keyword.css
      push:
        - meta_scope: meta.at-rule.import.css
        - match: ';'
          scope: punctuation.terminator.at-import.css
          pop: true
        - include: func-url
        - include: media-query-list
        - include: string
    - include: stray-semicolon

  at-keyframes:
    - match: '(@){{vendor_prefix}}keyframes{{b}}'
      captures:
        0: keyword.control.at-rule.keyframes.css
        1: punctuation.definition.keyword.css
      push:
        - meta_scope: meta.at-rule.keyframes.css
        - match: '}'
          scope: punctuation.section.at-keyframes.end.css
          pop: true
        - match: '{'
          scope: punctuation.section.at-keyframes.begin.css
          push:
            - meta_scope: meta.at-rule.keyframes.block.css
            - match: '(?=})'
              pop: true
            - include: keyframes-block
        - include: keyframes-name
    - include: stray-brace

  # Media queries start with "@media" and end with a closing curly brace. To
  # match this text, we define an outer scope that starts with "@media" and
  # continues until the closing "}". The text between the curlies is then
  # matched as a nested scope (the opening curly pushes a new scope on the
  # stack, which is popped at the closing curly). This lets us match the media
  # features before the opening curly and the text between the curlies in one
  # context.
  #
  # |-------------------outer scope-----------------------------------|
  #        |---media-features-etc----||--------nested scope----------|
  # @media stuff-before-opening-curly { selector { property: value; } }
  at-media:
    - match: '(@)media{{b}}'
      captures:
        0: keyword.control.at-rule.media.css
        1: punctuation.definition.keyword.css
      push:
        - meta_scope: meta.at-rule.media.css
        - match: '}'
          scope: punctuation.section.at-media.end.css
          pop: true
        - match: '{'
          scope: punctuation.section.at-media.begin.css
          push:
            - meta_scope: meta.at-rule.media.block.css
            - match: '(?=})'
              pop: true
            - include: nestable-at-rules
            - include: properties
            - include: rule
        - include: media-query-list
    - include: stray-brace

  at-namespace:
    - match: '(@)namespace{{b}}'
      captures:
        0: keyword.control.at-rule.namespace.css
        1: punctuation.definition.keyword.css
      push:
        - meta_scope: meta.at-rule.namespace.css
        - match: ';'
          scope: punctuation.terminator.at-namespace.css
          pop: true
        - include: func-url
        - include: string
        - include: identifier
    - include: stray-semicolon

  at-page:
    - match: '(@)page{{b}}'
      captures:
        0: keyword.control.at-rule.page.css
        1: punctuation.definition.keyword.css
      push:
        - meta_scope: meta.at-rule.page.css
        - match: '}'
          scope: punctuation.section.at-page.end.css
          pop: true
        - match: '{'
          scope: punctuation.section.at-page.begin.css
          push:
            - meta_scope: meta.at-rule.page.block.css
            - match: '(?=})'
              pop: true
            - include: page-margin-box
            - include: properties
        - include: selector-page
    - include: stray-brace

  at-supports:
    - match: '(@)supports{{b}}'
      captures:
        0: keyword.control.at-rule.supports.css
        1: punctuation.definition.keyword.css
      push:
        - meta_scope: meta.at-rule.supports.css
        - match: '}'
          scope: punctuation.section.at-supports.end.css
          pop: true
        - match: '{'
          scope: punctuation.section.at-supports.begin.css
          push:
            - meta_scope: meta.at-rule.supports.block.css
            - match: '(?=})'
              pop: true
            - include: nestable-at-rules
            - include: rule
        - include: supports-condition-operator
        - include: supports-condition
    - include: stray-brace

  at-viewport:
    - match: '(@){{ms}}viewport{{b}}'
      captures:
        0: keyword.control.at-rule.viewport.css
        1: punctuation.definition.keyword.css
      push:
        - meta_scope: meta.at-rule.viewport.css
        - match: '}'
          scope: punctuation.section.at-viewport.end.css
          pop: true
        - match: '{'
          scope: punctuation.section.at-viewport.begin.css
          push:
            - meta_scope: meta.at-rule.viewport.block.css
            - match: '(?=})'
              pop: true
            - include: descriptors-viewport

  attachment:
    - match: '\b(?:scroll|local|fixed){{b}}'
      scope: support.constant.property-value.css

  auto-repeat:
    - include: func-repeat

  auto-track-list:
    - include: line-names
    - include: fixed-repeat
    - include: auto-repeat
    - include: fixed-size

  baseline-position:
    - match: '\b(?:last-|first-)?baseline{{b}}'
      scope: support.constant.property-value.css

  baseline-shift:
    - match: '\b(?:super|sub|baseline){{b}}'
      scope: support.constant.property-value.css
    - include: percentage
    - include: length

  basic-shape:
    - include: func-inset
    - include: func-ellipse-circle
    - include: func-polygon

  blend-mode:
    - match: '(?x)
        \b
        (?:
          soft-light|
          screen|
          saturation|
          overlay|
          normal|
          multiply|
          luminosity|
          lighten|
          hue|
          hard-light|
          exclusion|
          difference|
          darken|
          color-dodge|
          color-burn|
          color
        )
        {{b}}'
      scope: support.constant.property-value.css

  bg-image:
    - include: image
    - match: '\bnone{{b}}'
      scope: support.constant.property-value.css

  bg-size:
    - match: '\b(?:cover|contain|auto){{b}}'
      scope: support.constant.property-value.css
    - include: percentage-non-negative
    - include: length-non-negative

  border-style:
    - match: \blogical{{b}}
      scope: support.constant.property-value.css
    - include: line-style

  border-width:
    - match: \blogical{{b}}
      scope: support.constant.property-value.css
    - include: line-width

  box:
    - match: '\b(?:padding-box|content-box|border-box){{b}}'
      scope: support.constant.property-value.css

  caret-shape:
    - match: '\b(?:underscore|block|bar|auto){{b}}'
      scope: support.constant.property-value.css

  color:
    - include: func-hsla
    - include: func-hwb
    - include: func-gray
    - include: func-device-cmyk
    - include: func-color
    - include: color-adjuster
    - include: func-rgba
    - include: icc-color
    - include: color-named
    - include: hex-color

  color-adjuster:
    - include: func-color-adjuster-rgb
    - include: func-tint-shade
    - include: func-contrast
    - include: func-blenda
    - include: func-hue
    - include: func-whiteness-saturation-lightness-blackness
    - include: func-red-green-blue-alpha-a

  color-adjuster-operator:
    - match: '[*+-]'
      scope: keyword.operator.arithmetic.css

  color-named:
    - include: color-named-deprecated
    - match: '(?x)
        \b
        (?:
          yellowgreen|
          yellow|
          whitesmoke|
          white|
          wheat|
          violet|
          turquoise|
          transparent|
          tomato|
          thistle|
          teal|
          tan|
          steelblue|
          springgreen|
          snow|
          slategrey|
          slategray|
          slateblue|
          skyblue|
          silver|
          sienna|
          seashell|
          seagreen|
          sandybrown|
          salmon|
          saddlebrown|
          royalblue|
          rosybrown|
          red|
          rebeccapurple|
          purple|
          powderblue|
          plum|
          pink|
          peru|
          peachpuff|
          papayawhip|
          palevioletred|
          paleturquoise|
          palegreen|
          palegoldenrod|
          orchid|
          orangered|
          orange|
          olivedrab|
          olive|
          oldlace|
          navy|
          navajowhite|
          moccasin|
          mistyrose|
          mintcream|
          midnightblue|
          mediumvioletred|
          mediumturquoise|
          mediumspringgreen|
          mediumslateblue|
          mediumseagreen|
          mediumpurple|
          mediumorchid|
          mediumblue|
          mediumaquamarine|
          maroon|
          magenta|
          linen|
          limegreen|
          lime|
          lightyellow|
          lightsteelblue|
          lightslategrey|
          lightslategray|
          lightskyblue|
          lightseagreen|
          lightsalmon|
          lightpink|
          lightgrey|
          lightgreen|
          lightgray|
          lightgoldenrodyellow|
          lightcyan|
          lightcoral|
          lightblue|
          lemonchiffon|
          lawngreen|
          lavenderblush|
          lavender|
          khaki|
          ivory|
          indigo|
          indianred|
          hotpink|
          honeydew|
          grey|
          greenyellow|
          green|
          gray|
          goldenrod|
          gold|
          ghostwhite|
          gainsboro|
          fuchsia|
          forestgreen|
          floralwhite|
          firebrick|
          dodgerblue|
          dimgrey|
          dimgray|
          deepskyblue|
          deeppink|
          darkviolet|
          darkturquoise|
          darkslategrey|
          darkslategray|
          darkslateblue|
          darkseagreen|
          darksalmon|
          darkred|
          darkorchid|
          darkorange|
          darkolivegreen|
          darkmagenta|
          darkkhaki|
          darkgrey|
          darkgreen|
          darkgray|
          darkgoldenrod|
          darkcyan|
          darkblue|
          cyan|
          currentcolor|
          crimson|
          cornsilk|
          cornflowerblue|
          coral|
          chocolate|
          chartreuse|
          cadetblue|
          burlywood|
          brown|
          blueviolet|
          blue|
          blanchedalmond|
          black|
          bisque|
          beige|
          azure|
          aquamarine|
          aqua|
          antiquewhite|
          aliceblue
        )
        {{b}}'
      scope: support.constant.color.w3c-color-name.css

  color-named-deprecated:
    - match: '(?x)
        \b
        (?:
          WindowText|
          WindowFrame|
          Window|
          ThreeDShadow|
          ThreeDLightShadow|
          ThreeDHighlight|
          ThreeDFace|
          ThreeDDarkShadow|
          Scrollbar|
          MenuText|
          Menu|
          InfoText|
          InfoBackground|
          InactiveCaptionText|
          InactiveCaption|
          InactiveBorder|
          HighlightText|
          Highlight|
          GrayText|
          CaptionText|
          ButtonText|
          ButtonShadow|
          ButtonHighlight|
          ButtonFace|
          Background|
          AppWorkspace|
          ActiveCaption|
          ActiveBorder
        )
        {{b}}'
      scope: support.constant.color.w3c-color-name.css invalid.deprecated.css

  color-stop:
    - include: color
    - include: percentage
    - include: length

  comment:
    - match: /\*
      push:
        - meta_scope: comment.block.css
        - match: \*/
          pop: true

  common-lig-values:
    - match: '\b(?:no-common-ligatures|common-ligatures){{b}}'
      scope: support.constant.property-value.css

  compositing-operator:
    - match: '\b(?:subtract|intersect|exclude|add){{b}}'
      scope: support.constant.property-value.css

  content-distribution:
    - match: '(?x)
        \b
        (?:
          stretch|
          space-evenly|
          space-between|
          space-around
        )
        {{b}}'
      scope: support.constant.property-value.css

  content-list:
    - match: '\b(?:document-url|contents){{b}}'
      scope: support.constant.property-value.css
    - include: quote
    - include: func-leader
    - include: target
    - include: func-content
    - include: func-url
    - include: string

  content-position:
    - match: '(?x)
        \b
        (?:
          start|
          flex-start|
          flex-end|
          end|
          center
        )
        {{b}}'
      scope: support.constant.property-value.css

  contextual-alt-values:
    - match: '\b(?:no-contextual|contextual){{b}}'
      scope: support.constant.property-value.css

  cubic-bezier-timing-function:
    - include: func-cubic-bezier
    - match: '\b(?:ease-out|ease-in-out|ease-in|ease){{b}}'
      scope: support.constant.property-value.css


  # NOTE: Do not implement counter-style. symbols() is a very specific match,
  # while <identifier> is very nonspecific. Lumping them together will cause
  # mismatches, either because the precedence of symbols() is too low or because
  # the precedence of <identifier> is too high. Instead, just include both these
  # contexts separately wherever <counter-style> is required.
  # counter-style:
  #   - include: func-symbols
  #   - include: identifier

  # declaration-list matches a block of property-value pairs, or nested blocks.
  # foo {
  #     property1: value1;
  #     property2: value2;
  #     & bar {
  #         property3: value3;
  #     }
  # }
  declaration-list:
    - match: '{'
      scope: punctuation.section.declaration-list.begin.css
      push:
        - meta_scope: meta.declaration-list.css
        - match: '(?=})'
          pop: true
        - match: '(?=@nest|@media|&)'
          push:
            - match: '(?=})'
              scope: punctuation.section.declaration-list.end.css
              pop: true
            - include: at-media
            - include: rule
        - include: at-apply
        - include: property-custom-declaration
        - include: properties

  dasharray:
    - include: percentage-non-negative
    - include: length-non-negative
    - include: number-non-negative

  decibel:
    - include: func-calc
    - match: '(?x)
        (?:
          ({{number}})({{decibel_unit}})|
          ({{zero}})(?![-.\w%])
        )'
      captures:
        1: constant.numeric.css
        2: keyword.other.unit.css
        3: constant.numeric.css

  descriptors-color-profile:
    - include: descriptor-color-profile-src
    - include: descriptor-color-profile-rendering-intent

  descriptors-counter-style:
    - include: descriptor-counter-style-system
    - include: descriptor-counter-style-negative
    - include: descriptor-counter-style-suffix-prefix
    - include: descriptor-counter-style-range
    - include: descriptor-counter-style-pad
    - include: descriptor-counter-style-fallback
    - include: descriptor-counter-style-symbols
    - include: descriptor-counter-style-additive-symbols
    - include: descriptor-counter-style-speak-as

  descriptors-font-face:
    - include: descriptor-font-face-font-language-override
    - include: descriptor-font-face-font-feature-settings
    - include: descriptor-font-face-font-named-instance
    - include: descriptor-font-face-unicode-range
    - include: descriptor-font-face-font-variant
    - include: descriptor-font-face-font-stretch
    - include: descriptor-font-face-font-display
    - include: descriptor-font-face-font-family
    - include: descriptor-font-face-font-weight
    - include: descriptor-font-face-font-style
    - include: descriptor-font-face-src

  descriptors-font-palette-values:
    - include: descriptor-font-palette-values-font-family
    - include: descriptor-font-palette-values-base-palette
    - include: descriptor-font-palette-values-color-integer

  descriptors-viewport:
    - include: descriptor-viewport-user-zoom
    - include: descriptor-viewport-orientation
    - include: descriptor-viewport-width-height
    - include: descriptor-viewport-zoom

  # CSS Color Module Level 4
  descriptor-color-profile-rendering-intent:
    - match: \b(rendering-intent)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_scope: meta.descriptor.color-profile.rendering-intent.css
        - include: end-value
        - include: value-css-wide
        - match: '(?x)
            \b
            (?:
              saturation|
              relative-colorimetric|
              perceptual|
              absolute-colorimetric
            )
            {{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Color Module Level 4
  descriptor-color-profile-src:
    - match: \b(src)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_scope: meta.descriptor.color-profile.src.css
        - include: end-value
        - include: value-css-wide
        - include: func-local
        - include: func-url
    - include: stray-paren-or-semicolon

  descriptor-counter-style-additive-symbols:
    - match: \b(additive-symbols)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_scope: meta.descriptor.counter-style.additive-symbols.css
        - include: end-value
        - include: value-css-wide
        - include: integer-non-negative
        - include: symbol
    - include: stray-paren-or-semicolon

  descriptor-counter-style-fallback:
    - match: \b(fallback)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_scope: meta.descriptor.counter-style.fallback.css
        - include: end-value
        - include: value-css-wide
        - include: identifier
    - include: stray-paren-or-semicolon

  descriptor-counter-style-negative:
    - match: \b(negative)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_scope: meta.descriptor.counter-style.negative.css
        - include: end-value
        - include: value-css-wide
        - include: symbol
    - include: stray-paren-or-semicolon

  descriptor-counter-style-pad:
    - match: \b(pad)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_scope: meta.descriptor.counter-style.pad.css
        - include: end-value
        - include: value-css-wide
        - include: integer
        - include: symbol
    - include: stray-paren-or-semicolon

  descriptor-counter-style-range:
    - match: \b(range)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_scope: meta.descriptor.counter-style.range.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:infinite|auto){{b}}'
          scope: support.constant.property-value.css
        - include: integer
    - include: stray-paren-or-semicolon

  descriptor-counter-style-speak-as:
    - match: \b(speak-as)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_scope: meta.descriptor.counter-style.speak-as.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:words|spell-out|numbers|bullets|auto){{b}}'
          scope: support.constant.property-value.css
        - include: identifier
    - include: stray-paren-or-semicolon

  descriptor-counter-style-suffix-prefix:
    - match: \b(suffix|prefix)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_scope: meta.descriptor.counter-style.suffix-prefix.css
        - include: end-value
        - include: value-css-wide
        - include: symbol
    - include: stray-paren-or-semicolon

  descriptor-counter-style-symbols:
    - match: \b(symbols)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_scope: meta.descriptor.counter-style.symbols.css
        - include: end-value
        - include: value-css-wide
        - include: symbol
    - include: stray-paren-or-semicolon

  descriptor-counter-style-system:
    - match: \b(system)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_scope: meta.descriptor.counter-style.system.css
        - include: end-value
        - include: value-css-wide
        - match: '(?x)
            \b
            (?:
              symbolic|
              numeric|
              fixed|
              extends|
              cyclic|
              alphabetic|
              additive
            )
            {{b}}'
          scope: support.constant.property-value.css
        - include: integer
        - include: identifier
    - include: stray-paren-or-semicolon

  descriptor-font-face-font-display:
    - match: \b(font-display)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.descriptor.font-face.font-display.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:swap|optional|fallback|block|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  descriptor-font-face-font-family:
    - match: \b(font-family)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_scope: meta.descriptor.font-face.font-family.css
        - include: end-value
        - include: value-css-wide
        - include: string
        # Generic font families, like 'serif', are not permitted in the
        # font-family descriptor, only in the font-family property.
        - match: '\b(?:{{generic_font_family}}){{b}}'
          scope: invalid.illegal.font-family.css
        - include: identifier
    - include: stray-paren-or-semicolon

  descriptor-font-face-font-feature-settings:
    - match: \b(font-feature-settings)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_scope: meta.descriptor.font-face.font-feature-settings.css
        - include: end-value
        - include: value-css-wide
        - include: string
        - match: '\b(?:on|off|normal){{b}}'
          scope: support.constant.property-value.css
        - include: integer-non-negative
    - include: stray-paren-or-semicolon

  descriptor-font-face-font-language-override:
    - match: \b(font-language-override)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_scope: meta.descriptor.font-face.font-language-override.css
        - include: end-value
        - include: value-css-wide
        - include: string
        - match: '\bnormal{{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  descriptor-font-face-font-named-instance:
    - match: \b(font-named-instance)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_scope: meta.descriptor.font-face.font-named-instance.css
        - include: end-value
        - include: value-css-wide
        - include: string
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  descriptor-font-face-font-stretch:
    - match: \b(font-stretch)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_scope: meta.descriptor.font-face.font-stretch.css
        - include: end-value
        - include: value-css-wide
        - match: '(?x)
            \b
            (?:
              ultra-expanded|
              ultra-condensed|
              semi-expanded|
              semi-condensed|
              normal|
              extra-expanded|
              extra-condensed|
              expanded|
              condensed
            )
            {{b}}'
          scope: support.constant.property-value.css
        - include: percentage-non-negative
    - include: stray-paren-or-semicolon

  descriptor-font-face-font-style:
    - match: \b(font-style)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_scope: meta.descriptor.font-face.font-style.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:oblique|normal|italic){{b}}'
          scope: support.constant.property-value.css
        - include: angle
    - include: stray-paren-or-semicolon

  descriptor-font-face-font-variant:
    - match: \b(font-variant)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_scope: meta.descriptor.font-face.font-variant.css
        - include: end-value
        - include: value-css-wide
        - include: func-swash-styleset-stylistic-ornaments-character-variant-annotation
        - match: '(?x)
            \b
            (?:
              unicase|
              titling-caps|
              super|
              sub|
              small-caps|
              slashed-zero|
              ruby|
              petite-caps|
              ordinal|
              normal|
              none|
              historical-forms|
              all-small-caps|
              all-petite-caps
            )
            {{b}}'
          scope: support.constant.property-value.css
        - include: common-lig-values
        - include: discretionary-lig-values
        - include: historical-lig-values
        - include: contextual-alt-values
        - include: east-asian-variant-values
        - include: east-asian-width-values
        - include: numeric-figure-values
        - include: numeric-fraction-values
        - include: numeric-spacing-values
    - include: stray-paren-or-semicolon

  descriptor-font-face-font-weight:
    - match: \b(font-weight)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_scope: meta.descriptor.font-face.font-weight.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:normal|bold|[1-9]00){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  descriptor-font-face-src:
    - match: \b(src)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_scope: meta.descriptor.font-face.src.css
        - include: end-value
        - include: value-css-wide
        - include: func-format
        - include: func-local
        - include: func-url
    - include: stray-paren-or-semicolon

  descriptor-font-face-unicode-range:
    - match: \b(unicode-range)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_scope: meta.descriptor.font-face.unicode-range.css
        - include: end-value
        - include: value-css-wide
        - match: '{{unicode_range}}'
          scope: constant.numeric.unicode-range.css
    - include: stray-paren-or-semicolon

  descriptor-font-palette-values-font-family:
    - include: descriptor-font-face-font-family

  descriptor-font-palette-values-base-palette:
    - match: \b(base-palette)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_scope: meta.descriptor.font-palette-values.base-palette.css
        - include: end-value
        - include: value-css-wide
        - include: integer
    - include: stray-paren-or-semicolon

  descriptor-font-palette-values-color-integer:
    - match: \b(color\-\d+)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_scope: meta.descriptor.font-palette-values.integer.css
        - include: end-value
        - include: value-css-wide
        - include: color
    - include: stray-paren-or-semicolon

  descriptor-viewport-orientation:
    - match: '\b(orientation)\s*(:)'
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_scope: meta.descriptor.viewport.orientation.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:portrait|landscape|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  descriptor-viewport-user-zoom:
    - match: '\b(user-zoom)\s*(:)'
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_scope: meta.descriptor.viewport.user-zoom.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:zoom|fixed){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  descriptor-viewport-width-height:
    - match: '\b({{optional_min_max_prefix}}(?:width|height))\s*(:)'
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_scope: meta.descriptor.viewport.width-height.css
        - include: end-value
        - include: value-css-wide
        - include: viewport-length
    - include: stray-paren-or-semicolon

  descriptor-viewport-zoom:
    - match: '\b({{optional_min_max_prefix}}zoom)\s*(:)'
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_scope: meta.descriptor.viewport.zoom.css
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: percentage-non-negative
        - include: number-non-negative
    - include: stray-paren-or-semicolon

  discretionary-lig-values:
    - match: '\b(?:no-discretionary-ligatures|discretionary-ligatures){{b}}'
      scope: support.constant.property-value.css

  display-box:
    - match: '\b(?:none|contents){{b}}'
      scope: support.constant.property-value.css

  display-inside:
    - match: '(?x)
        \b
        (?:
          table|
          subgrid|
          ruby|
          grid|
          flow-root|
          flow|
          flex
        )
        {{b}}'
      scope: support.constant.property-value.css

  display-internal:
    - match: '(?x)
        \b
        (?:
          table-row-group|
          table-row|
          table-header-group|
          table-footer-group|
          table-column-group|
          table-column|
          table-cell|
          table-caption|
          ruby-text-container|
          ruby-text|
          ruby-base-container|
          ruby-base
        )
        {{b}}'
      scope: support.constant.property-value.css

  display-legacy:
    - match: '(?x)
        \b
        (?:
          inline-table|
          inline-grid|
          inline-flex|
          inline-block
        )
        {{b}}'
      scope: support.constant.property-value.css

  display-listitem:
    - match: '\b(?:list-item|flow-root|flow){{b}}'
      scope: support.constant.property-value.css
    - include: display-outside

  display-outside:
    - match: '\b(?:run-in|inline|block){{b}}'
      scope: support.constant.property-value.css

  east-asian-variant-values:
    - match: '\b(?:traditional|simplified|jis90|jis83|jis78|jis04){{b}}'
      scope: support.constant.property-value.css

  east-asian-width-values:
    - match: '\b(?:proportional-width|full-width){{b}}'
      scope: support.constant.property-value.css

  end-func:
    - match: \)
      scope: punctuation.section.function.end.css
      pop: true

  end-media-feature:
    - match: '(?=\))'
      pop: true

  end-value:
    # end on } if this is the last property-value pair in the block.
    # end on ) if we're inside an @supports condition.
    - match: ';|(?=[}\)])'
      scope: punctuation.terminator.rule.css
      pop: true

  escape:
    - match: '{{escape}}'
      scope: constant.character.escape.css

  extent-keyword:
    - match: '(?x)
        \b
        (?:
          sides|
          farthest-side|
          farthest-corner|
          closest-side|
          closest-corner
        )
        {{b}}'
      scope: support.constant.property-value.css

  feature-tag-value:
    - include: string
    - match: '\b(?:on|off){{b}}'
      scope: support.constant.property-value.css
    - include: integer-non-negative

  fill-rule:
    - match: '\b(?:nonzero|evenodd){{b}}'
      scope: support.constant.property-value.css

  fixed-breadth:
    - include: percentage-non-negative
    - include: length-non-negative

  fixed-repeat:
    - include: func-repeat

  fixed-size:
    - include: func-minmax
    - include: fixed-breadth

  flex:
    - include: func-calc
    - match: '(?x)
        (?:
          ({{number}})({{flex_unit}})\b|
          ({{zero}})(?![-.\w%])
        )'
      captures:
        1: constant.numeric.css
        2: keyword.other.unit.css
        3: constant.numeric.css

  flex-direction:
    - match: '\b(?:row-reverse|row|column-reverse|column){{b}}'
      scope: support.constant.property-value.css

  flex-non-negative:
    - match: '(?x)
        (?:
          ({{number_non_neg}})({{flex_unit}})\b|
          ({{zero}})(?![-.\w%])
        )'
      captures:
        1: constant.numeric.css
        2: keyword.other.unit.css
        3: constant.numeric.css

  flex-wrap:
    - match: '\b(?:wrap-reverse|wrap|nowrap){{b}}'
      scope: support.constant.property-value.css

  font-feature-value-definition:
    - match: '\b({{identifier}})\s*(:)'
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - include: end-value
        - include: value-css-wide
        - include: integer

  font-feature-type-block:
    - match: '{'
      scope: punctuation.section.font-feature-type-block.begin.css
      push:
        - meta_scope: meta.font-feature-type-block.css
        - match: '(?=})'
          pop: true
        - include: font-feature-value-definition

  # This matches a feature_type (e.g. @swash) and a feature_value_block.
  #     |-----matches-------|
  #     @swash { ornate: 1; }
  font-feature-type-rule:
    - match: '(?x)
        (@)
        (?:
          swash|
          stylistic|
          styleset|
          ornaments|
          character-variant|
          annotation
        )
        {{b}}'
      captures:
        0: keyword.control.at-rule.feature-type.css
        1: punctuation.definition.keyword.css
      push:
        - match: '}'
          scope: punctuation.section.font-feature-type-block.end.css
          pop: true
        - include: font-feature-type-block
    - include: stray-brace

  font-family-generic:
    - match: '(?x)
        \b
        (?:
          system-ui|
          serif|
          sans-serif|
          monospace|
          math|
          fantasy|
          fangsong|
          emoji|
          cursive
        )
        {{b}}'
      scope: support.constant.property-value.css

  font-family-name:
    - include: string
    - include: identifier

  frames-timing-function:
    - include: func-frames

  frequency:
    - include: func-calc
    - match: '(?x)
        (?:
          ({{number}})({{frequency_unit}})\b|
          ({{zero}})(?![-.\w%])
        )'
      captures:
        1: constant.numeric.css
        2: keyword.other.unit.css
        3: constant.numeric.css

  func-attr:
    - match: \b(attr)(\()
      captures:
        1: support.function.attr.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.attr.css
        - include: end-func
        - include: func-var
        - include: type-or-unit
        - match: '{{wq_name}}'
          captures:
            1: entity.other.attribute-name.namespace.css
            2: entity.other.attribute-name.namespace.wildcard.css
            3: punctuation.separator.namespace.css
            4: entity.other.attribute-name.css
            5: entity.other.attribute-name.wildcard.css
        - include: attr-fallback

  func-blenda:
    - match: \b(blenda?)(\()
      captures:
        1: support.function.blenda.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.blenda.css
        - include: end-func
        - include: func-var
        - match: '\b(?:rgb|hwb|hsl){{b}}'
          scope: support.constant.property-value.css
        - include: percentage
        - include: color

  func-blur:
    - match: \b(blur)(\()
      captures:
        1: support.function.blur.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.blur.css
        - include: end-func
        - include: func-var
        - include: length-non-negative

  func-calc:
    - match: \b(calc)(\()
      captures:
        1: support.function.calc.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.calc.css
        - match: '\('
          push:
            - match: '\)'
              pop: true
            - include: value-calc
        - include: end-func
        - include: value-calc

  func-child:
    - match: \b(child)(\()
      captures:
        1: support.function.child.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.child.css
        - include: end-func
        - include: func-var
        - include: integer

  # Additions to CSS Color 4
  # TODO: This function currently isn't clearly defined by the spec.
  func-cielab:
    - match: \b(cielab)(\()
      captures:
        1: support.function.cielab.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.cielab.css
        - include: end-func
        - include: func-var
        - include: number

  # Additions to CSS Color 4
  # TODO: This function currently isn't clearly defined by the spec.
  func-cielchab:
    - match: \b(cielchab)(\()
      captures:
        1: support.function.cielchab.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.cielchab.css
        - include: end-func
        - include: func-var
        - include: number

  func-color:
    - match: \b(color)(\()
      captures:
        1: support.function.color.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.color.css
        - include: end-func
        - include: func-var
        - include: string
        - match: '\b(?:srgb|rec2020|dgi-p3){{b}}'
          scope: support.constant.property-value.css
        - include: color
        - include: percentage
        - include: number
        - include: identifier

  func-color-adjuster-rgb:
    - match: \b(rgb)(\()
      captures:
        1: support.function.color-adjuster-rgb.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.color-adjuster-rgb.css
        - include: end-func
        - include: func-var
        - include: percentage
        - include: hex-color
        - include: number
        - include: color-adjuster-operator

  func-conic-gradient:
    - match: \b((?:repeating-)?conic-gradient)(\()
      captures:
        1: support.function.conic-gradient.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.conic-gradient.css
        - include: end-func
        - include: func-var
        - match: '\b(?:from|at){{b}}'
          scope: support.constant.property-value.css
        - include: position
        - include: angular-color-stop

  func-content:
    - match: \b(content)(\()
      captures:
        1: support.function.content.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.content.css
        - include: end-func
        - include: func-var
        - match: '\b(?:text|marker|first-letter|before|after){{b}}'
          scope: support.constant.property-value.css

  # This function is defined in two specs:
  #     CSS Color Module Level 4
  #     Filter Effects Module Level 1
  # It matches a superset of both definitions of contrast().
  func-contrast:
    - match: \b(contrast)(\()
      captures:
        1: support.function.contrast.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.contrast.css
        - include: end-func
        - include: func-var
        - include: percentage-non-negative
        - include: number-non-negative

  func-counter:
    - match: \b(counter)(\()
      captures:
        1: support.function.counter.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.counter.css
        - include: end-func
        - include: func-var
        - include: func-symbols
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: identifier

  func-counters:
    - match: \b(counters)(\()
      captures:
        1: support.function.counters.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.counters.css
        - include: end-func
        - include: func-var
        - include: func-symbols
        - include: string
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: identifier

  func-cross-fade:
    - match: \b(cross-fade)(\()
      captures:
        1: support.function.cross-fade.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.cross-fade.css
        - include: end-func
        - include: func-var
        - include: image
        - include: color
        - include: percentage-zero-to-100

  func-cubic-bezier:
    - match: \b(cubic-bezier)(\()
      captures:
        1: support.function.cubic-bezier.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.cubic-bezier.css
        - include: end-func
        - include: func-var
        - include: number-zero-to-one

  func-device-cmyk:
    - match: \b(device-cmyk)(\()
      captures:
        1: support.function.device-cmyk.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.device-cmyk.css
        - include: end-func
        - include: func-var
        - include: percentage-zero-to-100
        - include: number-zero-to-one
        - include: color

  # Additions to CSS Color 4
  # TODO: This function currently isn't clearly defined by the spec.
  func-device-gray:
    - match: \b(device-gray)(\()
      captures:
        1: support.function.device-gray.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.device-gray.css
        - include: end-func
        - include: func-var
        - include: number

  # Additions to CSS Color 4
  # TODO: This function currently isn't clearly defined by the spec.
  func-device-nchannel:
    - match: \b(device-nchannel)(\()
      captures:
        1: support.function.device-nchannel.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.device-nchannel.css
        - include: end-func
        - include: func-var
        - include: number

  # Additions to CSS Color 4
  # TODO: This function currently isn't clearly defined by the spec.
  func-device-rgb:
    - match: \b(device-rgb)(\()
      captures:
        1: support.function.device-rgb.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.device-rgb.css
        - include: end-func
        - include: func-var
        - include: number

  func-drop-shadow:
    - match: \b(drop-shadow)(\()
      captures:
        1: support.function.drop-shadow.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.drop-shadow.css
        - include: end-func
        - include: func-var
        - include: color
        - include: length

  func-element:
    - match: \b(element)(\()
      captures:
        1: support.function.element.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.element.css
        - include: end-func
        - include: func-var
        - match: '\b(?:start|last|first-except|first){{b}}'
          scope: support.constant.property-value.css
        - include: selector-id

  func-ellipse-circle:
    - match: \b(ellipse|circle)(\()
      captures:
        1: support.function.ellipse-circle.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.ellipse-circle.css
        - include: end-func
        - include: func-var
        - match: '\bat{{b}}'
          scope: support.constant.property-value.css
        - include: shape-radius
        - include: position

  func-fade:
    - match: \b(fade)(\()
      captures:
        1: support.function.fade.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.fade.css
        - include: end-func
        - include: func-var
        - include: length-non-negative
        - include: percentage-non-negative

  func-filter:
    - match: \b(sepia|saturate|opacity|invert|grayscale|contrast|brightness)(\()
      captures:
        1: support.function.filter.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.filter.css
        - include: end-func
        - include: func-var
        - include: percentage-non-negative
        - include: number-non-negative

  func-fit-content:
    - match: \b(fit-content)(\()
      captures:
        1: support.function.fit-content.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.fit-content.css
        - include: end-func
        - include: func-var
        - include: percentage
        - include: length

  func-format:
    - match: \b(format)(\()
      captures:
        1: support.function.format.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.format.css
        - include: end-func
        - include: func-var
        - include: string

  func-frames:
    - match: \b(frames)(\()
      captures:
        1: support.function.frames.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.frames.css
        - include: end-func
        - include: func-var
        - include: integer-positive

  func-gray:
    - match: \b(gray)(\()
      captures:
        1: support.function.gray.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.gray.css
        - include: end-func
        - include: func-var
        - include: percentage-zero-to-100
        - include: number

  func-hsla:
    - match: \b(hsla?)(\()
      captures:
        1: support.function.hsla.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.hsla.css
        - include: end-func
        - include: func-var
        - include: angle
        - include: percentage-zero-to-100
        - include: number  # matches part of <hue> and <alpha-value>

  func-hue:
    - match: \b(hue|h)(\()
      captures:
        1: support.function.hue.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.hue.css
        - include: end-func
        - include: func-var
        - include: color-adjuster-operator
        - include: angle

  func-hue-rotate:
    - match: \b(hue-rotate)(\()
      captures:
        1: support.function.hue-rotate.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.hue-rotate.css
        - include: end-func
        - include: func-var
        - include: angle

  func-hwb:
    - match: \b(hwb)(\()
      captures:
        1: support.function.hwb.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.hwb.css
        - include: end-func
        - include: func-var
        - include: percentage-zero-to-100
        - include: angle
        - include: number  # matches part of <hue> and <alpha-value>

  # Additions to CSS Color 4
  # TODO: This function currently isn't clearly defined by the spec.
  func-icc-color:
    - match: \b(icc-(?:named-)?color)(\()
      captures:
        1: support.function.icc-color.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.icc-color.css
        - include: end-func
        - include: func-var
        - include: icc-color
        - include: number
        - include: identifier

  func-image:
    - match: \b(image)(\()
      captures:
        1: support.function.image.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.image.css
        - include: end-func
        - include: func-var
        - include: func-url
        - match: '\b(?:rtl|ltr){{b}}'
          scope: support.constant.property-value.css
        - include: image
        - include: string
        - include: color

  func-image-set:
    - match: \b(image-set)(\()
      captures:
        1: support.function.image-set.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.image-set.css
        - include: end-func
        - include: func-var
        - include: image
        - include: resolution
        - include: string

  func-inset:
    - match: \b(inset)(\()
      captures:
        1: support.function.inset.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.inset.css
        - include: end-func
        - include: func-var
        - match: '\bround{{b}}'
          scope: support.constant.property-value.css
        - include: shape-arg
        - match: '\/'
          scope: keyword.operator.arithmetic.css

  func-leader:
    - match: \b(leader)(\()
      captures:
        1: support.function.leader.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.leader.css
        - include: end-func
        - include: func-var
        - include: string
        - match: '\b(?:space|solid|dotted){{b}}'
          scope: support.constant.property-value.css

  func-linear-gradient:
    - match: \b((?:repeating-)?linear-gradient)(\()
      captures:
        1: support.function.linear-gradient.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.linear-gradient.css
        - include: end-func
        - include: func-var
        - include: side-or-corner
        - match: '\bto{{b}}'
          scope: support.constant.property-value.css
        - include: angle
        - include: color-stop

  func-local:
    - match: \b(local)(\()
      captures:
        1: support.function.local.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.local.css
        - include: end-func
        - include: func-var
        - include: string
        - include: identifier

  func-matrix:
    - match: \b(matrix(?:3d)?)(\()
      captures:
        1: support.function.matrix.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.matrix.css
        - include: end-func
        - include: func-var
        - include: number

  func-minmax:
    - match: \b(minmax)(\()
      captures:
        1: support.function.minmax.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.minmax.css
        - include: end-func
        - include: func-var
        - match: '\b(?:min-content|max-content|auto){{b}}'
          scope: support.constant.property-value.css
        - include: flex-non-negative
        - include: percentage-non-negative
        - include: length-non-negative

  func-path:
    - match: \b(path)(\()
      captures:
        1: support.function.path.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.path.css
        - include: end-func
        - include: func-var
        - include: fill-rule
        - include: string

  func-perspective:
    - match: \b(perspective)(\()
      captures:
        1: support.function.perspective.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.perspective.css
        - include: end-func
        - include: func-var
        - include: length-positive

  func-polygon:
    - match: \b(polygon)(\()
      captures:
        1: support.function.polygon.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.polygon.css
        - include: end-func
        - include: func-var
        - include: fill-rule
        - include: shape-arg

  func-radial-gradient:
    - match: \b((?:repeating-)?radial-gradient)(\()
      captures:
        1: support.function.radial-gradient.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.radial-gradient.css
        - include: end-func
        - include: func-var
        - match: '\b(?:ellipse|circle|at){{b}}'
          scope: support.constant.property-value.css
        - include: size
        - include: position
        - include: color-stop

  func-ray:
    - match: \b(ray)(\()
      captures:
        1: support.function.ray.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.ray.css
        - include: end-func
        - include: func-var
        - match: '\bcontain{{b}}'
          scope: support.constant.property-value.css
        - include: angle
        - include: size

  func-red-green-blue-alpha-a:
    - match: \b(red|green|blue|alpha|a)(\()
      captures:
        1: support.function.red-green-blue-alpha-a.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.red-green-blue-alpha-a.css
        - include: end-func
        - include: func-var
        - include: percentage
        - include: number
        - include: color-adjuster-operator

  func-repeat:
    - match: \b(repeat)(\()
      captures:
        1: support.function.repeat.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.repeat.css
        - include: end-func
        - include: func-var
        - include: line-names
        - include: track-size
        - match: '\b(?:auto-fit|auto-fill){{b}}'
          scope: support.constant.property-value.css
        - include: integer-positive

  func-rgba:
    - match: \b(rgba?)(\()
      captures:
        1: support.function.rgba.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.rgba.css
        - include: end-func
        - include: func-var
        - include: rgb-component
        - include: alpha-value

  func-rotate:
    - match: \b(rotate[XYZ]?)(\()
      captures:
        1: support.function.rotate.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.rotate.css
        - include: end-func
        - include: func-var
        - include: angle

  func-rotate3d:
    - match: \b(rotate3d)(\()
      captures:
        1: support.function.rotate3d.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.rotate3d.css
        - include: end-func
        - include: func-var
        - include: angle
        - include: number

  func-running:
    - match: \b(running)(\()
      captures:
        1: support.function.running.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.running.css
        - include: end-func
        - include: func-var
        - include: identifier

  func-select:
    - match: \b(select)(\()
      captures:
        1: support.function.select.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.select.css
        - include: end-func
        - include: func-var
        - include: selector-simple-compound

  func-scale:
    - match: \b(scale(?:[XYZ]|3d)?)(\()
      captures:
        1: support.function.scale.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.scale.css
        - include: end-func
        - include: func-var
        - include: number

  func-skew:
    - match: \b(skew[XY]?)(\()
      captures:
        1: support.function.skew.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.skew.css
        - include: end-func
        - include: func-var
        - include: angle

  func-snap-block:
    - match: \b(snap-block)(\()
      captures:
        1: support.function.snap-block.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.snap-block.css
        - include: end-func
        - include: func-var
        - match: '\b(?:start|near|end){{b}}'
          scope: support.constant.property-value.css
        - include: length

  func-snap-inline:
    - match: \b(snap-inline)(\()
      captures:
        1: support.function.snap-inline.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.snap-inline.css
        - include: end-func
        - include: func-var
        - match: '\b(?:right|near|left){{b}}'
          scope: support.constant.property-value.css
        - include: length

  func-steps:
    - match: \b(steps)(\()
      captures:
        1: support.function.steps.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.steps.css
        - include: end-func
        - include: func-var
        - match: '\b(?:start|end){{b}}'
          scope: support.constant.property-value.css
        - include: integer-positive

  func-string:
    - match: \b(string)(\()
      captures:
        1: support.function.string.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.string.css
        - include: end-func
        - include: func-var
        - match: '\b(?:start|last|first-except|first){{b}}'
          scope: support.constant.property-value.css
        - include: identifier

  func-swash-styleset-stylistic-ornaments-character-variant-annotation:
    - match: '(?x)
        \b
        (
          swash|
          stylistic|
          styleset|
          ornaments|
          character-variant|
          annotation
        )
        (\()'
      captures:
        1: support.function.swash-styleset-stylistic-ornaments-character-variant-annotation.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.swash-styleset-stylistic-ornaments-character-variant-annotation.css
        - include: end-func
        - include: func-var
        - include: identifier
        - include: integer-non-negative

  func-symbols:
    - match: \b(symbols)(\()
      captures:
        1: support.function.symbols.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.symbols.css
        - include: end-func
        - include: func-var
        - include: image
        - include: string
        - match: '(?x)
            \b
            (?:
              symbolic|
              numeric|
              fixed|
              cyclic|
              alphabetic
            )
            {{b}}'
          scope: support.constant.property-value.css

  # This context matches target-counter() too.
  func-target-counters:
    - match: \b(target-counters?)(\()
      captures:
        1: support.function.target-counters.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.target-counters.css
        - include: end-func
        - include: func-var
        - include: func-symbols
        - include: func-url
        - include: string
        - include: identifier

  func-target-text:
    - match: \b(target-text)(\()
      captures:
        1: support.function.target-text.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.target-text.css
        - include: end-func
        - include: func-var
        - include: func-url
        - include: string
        - match: '(?x)
            \b
            (?:
              first-letter|
              content|
              before|
              after
            )
            {{b}}'
          scope: support.constant.property-value.css

  func-tint-shade:
    - match: \b(tint|shade)(\()
      captures:
        1: support.function.func-tint-shade.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.tint-shade.css
        - include: end-func
        - include: func-var
        - include: percentage

  func-translate:
    - match: \b(translate(?:X|Y|3d)?)(\()
      captures:
        1: support.function.translate.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.translate.css
        - include: end-func
        - include: func-var
        - include: percentage
        - include: length

  func-translate-z:
    - match: \b(translateZ)(\()
      captures:
        1: support.function.translate-z.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.translate-z.css
        - include: end-func
        - include: func-var
        - include: length

  func-url:
    - match: \b(url)(\()
      captures:
        1: support.function.url.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.url.css
        - include: end-func
        - include: func-var
        - include: string

  func-var:
    - match: \b(var)(\()
      captures:
        1: support.function.var.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.var.css
        - include: end-func
        - include: func-var
        - match: ','
          push:
            - match: '(?=[,)])'
              pop: true
            - include: any-value  # <declaration-value>
        - match: '{{custom_property_name}}'
          scope: support.type.property-name.custom.css

  func-whiteness-saturation-lightness-blackness:
    - match: '(?x)
        \b
        (
          whiteness|
          w|
          saturation|
          s|
          lightness|
          l|
          blackness|
          b
        )
        (\()'
      captures:
        1: support.function.whiteness-saturation-lightness-blackness.css
        2: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.whiteness-saturation-lightness-blackness.css
        - include: end-func
        - include: func-var
        - include: percentage
        - include: color-adjuster-operator

  generic-voice:
    - match: '\b(?:young|old|neutral|male|female|child){{b}}'
      scope: support.constant.property-value.css
    - include: integer-positive

  geometry-box:
    - match: '\b(?:view-box|stroke-box|fill-box){{b}}'
      scope: support.constant.property-value.css
    - include: shape-box

  gradient:
    - include: func-radial-gradient
    - include: func-linear-gradient
    - include: func-conic-gradient

  grid-line:
    - match: '\b(?:span|auto){{b}}'
      scope: support.constant.property-value.css
    - include: integer
    - match: '\/'
      scope: keyword.operator.arithmetic.css
    - include: identifier

  hex-color:
    - match: '{{hex_color}}'
      captures:
        0: constant.other.color.rgb-value.css
        1: punctuation.definition.constant.css

  historical-lig-values:
    - match: '\b(?:no-historical-ligatures|historical-ligatures){{b}}'
      scope: support.constant.property-value.css

  identifier:
    - match: '{{identifier}}'
      scope: string.unquoted.identifier.css

  icc-color:
    - include: func-icc-color
    - include: func-cielab
    - include: func-cielchab
    - include: func-device-gray
    - include: func-device-rgb
    - include: func-device-nchannel

  image:
    - include: gradient
    - include: func-cross-fade
    - include: func-element
    - include: func-image-set
    - include: func-image
    - include: func-url

  integer:
    - include: func-calc
    - match: '{{integer}}'
      scope: constant.numeric.css

  integer-non-negative:
    - include: func-calc
    - match: '{{integer_non_neg}}'
      scope: constant.numeric.css

  integer-positive:
    - include: func-calc
    - match: '{{integer_pos}}'
      scope: constant.numeric.css

  isolation-mode:
    - match: '\b(?:isolate|auto){{b}}'
      scope: support.constant.property-value.css

  # This is based on the rule context.
  keyframes-block:
    - match: '(?=[fromt\d%])'  # to|from|<percentage>
      push:
        - meta_scope: meta.keyframes-block.css
        - match: '}'
          scope: punctuation.section.declaration-list.end.css
          pop: true
        - include: declaration-list
        - include: selector-keyframes
    - include: stray-brace

  keyframes-name:
    - include: string
    - include: identifier

  knockout-offset:
    - include: percentage
    - include: length
    - include: number

  knockout-shape:
    - match: '\b(?:triangle|rectangle|inverted|ellipse|circle){{b}}'
      scope: support.constant.property-value.css
    - include: percentage
    - include: length
    - include: number

  length:
    - include: func-calc
    - match: '(?x)
        (?:
          ({{number}})({{length_unit}})\b|
          ({{zero}})(?![-.\w%])
        )'
      captures:
        1: constant.numeric.css
        2: keyword.other.unit.css
        3: constant.numeric.css

  length-non-negative:
    - include: func-calc
    - match: '(?x)
        (?:
          ({{number_non_neg}})({{length_unit}})\b|
          ({{zero}})(?![-.\w%])
        )'
      captures:
        1: constant.numeric.css
        2: keyword.other.unit.css
        3: constant.numeric.css

  length-positive:
    - include: func-calc
    - match: '(?x)
        (?:
          ({{number_pos}})({{length_unit}})\b|
          ({{zero}})(?![-.\w%])
        )'
      captures:
        1: constant.numeric.css
        2: keyword.other.unit.css
        3: constant.numeric.css

  line-names:
    - match: '\['
      scope: punctuation.section.line-names.begin.css
      push:
        - match: '\]'
          scope: punctuation.section.line-names.end.css
          pop: true
        - include: identifier

  line-style:
    - match: '(?x)
        \b
        (?:
          solid|
          ridge|
          outset|
          none|
          inset|
          hidden|
          groove|
          double|
          dotted|
          dashed
        )
        {{b}}'
      scope: support.constant.property-value.css

  line-width:
    - match: '\b(?:thin|thick|medium){{b}}'
      scope: support.constant.property-value.css
    - include: length-non-negative

  marker-gap:
    - include: percentage
    - include: length
    - include: number

  marker-ref:
    - include: func-select
    - include: func-url
    - match: '\bchild{{b}}'
      scope: support.constant.property-value.css

  mask-layer:
    - include: mask-reference
    - include: masking-mode
    - include: bg-size
    - include: repeat-style
    - include: geometry-box
    - match: '\bno-clip{{b}}'
      scope: support.constant.property-value.css
    - include: compositing-operator
    - include: position

  mask-reference:
    - include: func-url
    - include: image
    - match: '\bnone{{b}}'
      scope: support.constant.property-value.css

  masking-mode:
    - match: '\b(?:match-source|luminance|alpha){{b}}'
      scope: support.constant.property-value.css

  media-feature:
    - match: \(
      scope: punctuation.section.media-feature.begin.css
      push:
        - meta_scope: meta.media-feature.css
        # Note that this is different from media-feature-end, which matches
        # just before the closing paren.
        - match: \)
          scope: punctuation.section.media-feature.end.css
          pop: true
        - include: media-feature-deprecated
        - include: media-feature-custom  # TODO: correct precedence?
        - include: media-feature-aspect-ratio
        - include: media-feature-color-gamut
        - include: media-feature-grid
        - include: media-feature-hover
        - include: media-feature-inverted-colors
        - include: media-feature-monochrome-color-index
        - include: media-feature-width-height
        - include: media-feature-light-level
        - include: media-feature-orientation
        - include: media-feature-overflow-block
        - include: media-feature-overflow-inline
        - include: media-feature-pointer
        - include: media-feature-resolution
        - include: media-feature-scan
        - include: media-feature-scripting
        - include: media-feature-update
        - include: media-feature-range-operator
        # Match values and comparison operators that appear at the start.
        #  |------|
        # (480px <= width <= 640px)
        - include: ratio
        - include: resolution
        - include: length-non-negative
        - include: integer-non-negative
    - include: stray-paren

  # e.g. (aspect-ratio: 16/9)
  media-feature-aspect-ratio:
    - match: '(?x)
        \b
        (
          {{optional_min_max_prefix}}
          aspect-ratio
        )\s*(:)?'
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.aspect-ratio.css
        - include: end-media-feature
        - include: value-css-wide
        - include: ratio
        - include: media-feature-range-operator

  media-feature-color-gamut:
    - match: \b(color-gamut)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.color-gamut.css
        - include: end-media-feature
        - include: value-css-wide
        - match: \b(?:srgb|rec2020|p3)\b
          scope: support.constant.property-value.css

  media-feature-custom:
    - match: '\-\-{{identifier}}'
      scope: support.constant.custom-media-query-name.css

  media-feature-deprecated:
    - match: '(?x)
        (
          {{optional_min_max_prefix}}
          device\-(?:width|height|aspect-ratio)
        )
        \s*(:)?'
      captures:
        1: support.type.property-name.css invalid.deprecated.css
        2: punctuation.separator.key-value.css

  media-feature-grid:
    - match: \b(grid)\s*(:)?
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.media-feature-grid.css
        - include: end-media-feature
        - include: value-css-wide
        - match: \b(?:0|1)\b
          scope: support.constant.property-value.css

  media-feature-hover:
    - match: \b((?:any-)?hover)\s*(:)?
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.hover.css
        - include: end-media-feature
        - include: value-css-wide
        - match: '\b(?:on-demand|none|hover){{b}}'
          scope: support.constant.property-value.css

  media-feature-inverted-colors:
    - match: \b(inverted-colors)\s*(:)?
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.inverted-colors.css
        - include: end-media-feature
        - include: value-css-wide
        - match: '\b(?:none|inverted){{b}}'
          scope: support.constant.property-value.css

  media-feature-light-level:
    - match: '\b(light-level)\s*(:)'
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.light-level.css
        - include: end-media-feature
        - include: value-css-wide
        - match: '\b(?:washed|normal|dim){{b}}'
          scope: support.constant.property-value.css

  media-feature-monochrome-color-index:
    - match: '(?x)
        \b
        (
          {{optional_min_max_prefix}}
          (?:monochrome|color-index|color)
        )\s*(:)?
        {{not_followed_by_dash}}'
        # {{not_followed_by_dash}} prevents "color" from matching misspelled
        # "color-index" or "color-gamut". {{b}} won't work because ':' isn't a
        # word boundary.
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.monochrome-color-index.css
        - include: end-media-feature
        - include: value-css-wide
        - include: integer-non-negative
        - include: media-feature-range-operator

  media-feature-orientation:
    - match: \b(orientation)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.orientation.css
        - include: end-media-feature
        - include: value-css-wide
        - match: '\b(?:portrait|landscape){{b}}'
          scope: support.constant.property-value.css

  media-feature-overflow-block:
    - match: \b(overflow-block)\s*(:)?
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.overflow-block.css
        - include: end-media-feature
        - include: value-css-wide
        - match: '\b(?:scroll|paged|optional-paged|none){{b}}'
          scope: support.constant.property-value.css

  media-feature-overflow-inline:
    - match: \b(overflow-inline)\s*(:)?
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.overflow-inline.css
        - include: end-media-feature
        - include: value-css-wide
        - match: '\b(?:scroll|none){{b}}'
          scope: support.constant.property-value.css

  media-feature-pointer:
    - match: '\b((?:any-)?pointer)\s*(:)?{{not_followed_by_dash}}'
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.pointer.css
        - include: end-media-feature
        - include: value-css-wide
        - match: '\b(?:none|fine|coarse){{b}}'
          scope: support.constant.property-value.css

  media-feature-range-operator:
    - match: '(?:[<>]=?|=)(?=[\s\w])'
      scope: keyword.operator.arithmetic.css

  # e.g. (min-resolution: 300dpi)
  media-feature-resolution:
    - match: '(?x)
        \b
        (
          {{optional_min_max_prefix}}
          resolution
        )\s*(:)?
        {{not_followed_by_dash}}'
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.resolution.css
        - include: end-media-feature
        - include: value-css-wide
        - match: \binfinite{{b}}
          scope: support.constant.property-value.css
        - include: resolution
        - include: media-feature-range-operator

  media-feature-scan:
    - match: '\b(scan)\s*(:)?{{not_followed_by_dash}}'
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.scan.css
        - include: end-media-feature
        - include: value-css-wide
        - match: '\b(?:progressive|interlace){{b}}'
          scope: support.constant.property-value.css

  media-feature-scripting:
    - match: '\b(scripting)\s*(:)?{{not_followed_by_dash}}'
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.scripting.css
        - include: end-media-feature
        - include: value-css-wide
        - match: '\b(?:none|initial-only|enabled){{b}}'
          scope: support.constant.property-value.css

  media-feature-update:
    - match: '\b(update)\s*(:)?{{not_followed_by_dash}}'
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.update.css
        - include: end-media-feature
        - include: value-css-wide
        - match: '\b(?:slow|none|fast){{b}}'
          scope: support.constant.property-value.css

  # may appear as "(width: 480px)" or "(width >= 480px)"
  media-feature-width-height:
    - match: '(?x)
        \b
        (
          {{optional_min_max_prefix}}
          (?:width|height)
        )\s*(:)?
        {{not_followed_by_dash}}'
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.width-height.css
        - include: end-media-feature
        - include: value-css-wide
        - include: length-non-negative
        - include: media-feature-range-operator

  # This is used by the at-media and at-import contexts.
  media-query-list:
    - match: '\band{{b}}'
      scope: keyword.operator.logic.media.css
    - include: media-feature
    - include: media-type

  media-type:
    - include: media-type-deprecated
    - match: (?:(only|not)\s+)?(speech|screen|print|all)
      captures:
        1: keyword.operator.logic.media.css
        2: support.constant.media.css

  media-type-deprecated:
    - match: '\b(?:tv|tty|reader|projection|handheld|embossed|braille|aural){{b}}'
      scope: support.constant.media.css invalid.deprecated.css

  nestable-at-rules:
    - include: at-font-feature-values
    - include: at-font-palette-values
    - include: at-counter-style
    - include: at-font-face
    - include: at-keyframes
    - include: at-viewport
    - include: at-supports
    - include: at-media
    - include: at-page

  number:
    - include: func-calc
    - match: '{{number}}'
      scope: constant.numeric.css

  number-non-negative:
    - include: func-calc
    - match: '{{number_non_neg}}'
      scope: constant.numeric.css

  number-positive:
    - include: func-calc
    - match: '{{number_pos}}'
      scope: constant.numeric.css

  number-zero-to-one:
    - include: func-calc
    - match: '{{number_zero_to_one}}'
      scope: constant.numeric.css

  number-zero-to-255:
    - include: func-calc
    - match: '{{number_zero_to_255}}'
      scope: constant.numeric.css

  numeric-figure-values:
    - match: '\b(?:oldstyle-nums|lining-nums){{b}}'
      scope: support.constant.property-value.css

  numeric-fraction-values:
    - match: '\b(?:stacked-fractions|diagonal-fractions){{b}}'
      scope: support.constant.property-value.css

  numeric-spacing-values:
    - match: '\b(?:tabular-nums|proportional-nums){{b}}'
      scope: support.constant.property-value.css

  overflow-position:
    - match: '\b(?:un)?safe{{b}}'
      scope: support.constant.property-value.css

  page-margin-box:
    - match: '(?x)
        (@)
        (?:
          top-right-corner|
          top-right|
          top-left-corner|
          top-left|
          top-center|
          right-top|
          right-middle|
          right-bottom|
          left-top|
          left-middle|
          left-bottom|
          bottom-right-corner|
          bottom-right|
          bottom-left-corner|
          bottom-left|
          bottom-center
        )
        {{b}}'
      captures:
        0: keyword.control.at-rule.page-margin-box.css
        1: punctuation.definition.keyword.css
      push:
        - meta_scope: meta.page-margin-box.css
        - match: '}'
          scope: punctuation.section.page-margin-at-rule.end.css
          pop: true
        - match: '{'
          scope: punctuation.section.page-margin-at-rule.begin.css
          push:
            - meta_scope: meta.declaration-list.css
            - match: '(?=})'
              pop: true
            - include: properties
    - include: stray-brace

  page-size:
    - match: '\b(?:letter|legal|ledger|B5|B4|A5|A4|A3){{b}}'
      scope: support.constant.property-value.css

  paint:
    - include: func-url
    - include: func-child
    - match: '\b(?:none|context-stroke|context-fill|child){{b}}'
      scope: support.constant.property-value.css
    - include: image

  percentage:
    - include: func-calc
    - match: '(?x)
        (?:
          ({{number}})({{percentage_unit}})|
          ({{zero}})(?![-.\w%])
        )'
      captures:
        1: constant.numeric.css
        2: keyword.other.unit.css
        3: constant.numeric.css

  percentage-non-negative:
    - include: func-calc
    - match: '(?x)
        (?:
          ({{number_non_neg}})({{percentage_unit}})|
          ({{zero}})(?![-.\w%])
        )'
      captures:
        1: constant.numeric.css
        2: keyword.other.unit.css
        3: constant.numeric.css

  percentage-zero-to-100:
    - include: func-calc
    - match: '(?x)
        (?:
          ({{number_zero_to_100}})({{percentage_unit}})|
          ({{zero}})(?![-.\w%])
        )'
      captures:
        1: constant.numeric.css
        2: keyword.other.unit.css
        3: constant.numeric.css

  position:
    - match: '\b(?:top|right|left|center|bottom){{b}}'
      scope: support.constant.property-value.css
    - include: percentage
    - include: length

  properties:
    - include: property-deprecated

    # Properties with names that are two or more words are given a higher
    # precedence because they are less likely to mismatch.
    - include: property-align-content
    - include: property-align-items
    - include: property-align-self
    - include: property-alignment-baseline
    - include: property-animation-composition
    - include: property-animation-delay
    - include: property-animation-direction
    - include: property-animation-duration
    - include: property-animation-fill-mode
    - include: property-animation-iteration-count
    - include: property-animation-name
    - include: property-animation-play-state
    - include: property-animation-timing-function
    - include: property-backface-visibility
    - include: property-background-attachment
    - include: property-background-blend-mode
    - include: property-background-clip
    - include: property-background-color
    - include: property-background-image
    - include: property-background-image-transform
    - include: property-background-origin
    - include: property-background-position
    - include: property-background-repeat
    - include: property-background-size
    - include: property-baseline-shift
    - include: property-block-inline-size
    - include: property-block-step-align
    - include: property-block-step-insert
    - include: property-block-step-round
    - include: property-block-step-size
    - include: property-block-step
    - include: property-bookmark-label
    - include: property-bookmark-level
    - include: property-bookmark-state
    - include: property-border-boundary
    - include: property-border-block-inline
    - include: property-border-block-inline-color
    - include: property-border-block-inline-style
    - include: property-border-block-inline-width
    - include: property-border-collapse
    - include: property-border-color
    - include: property-border-image
    - include: property-border-image-outset
    - include: property-border-image-repeat
    - include: property-border-image-slice
    - include: property-border-image-source
    - include: property-border-image-transform
    - include: property-border-image-width
    - include: property-border-radius
    - include: property-border-spacing
    - include: property-border-style
    - include: property-border-top-right-left-bottom
    - include: property-border-width
    - include: property-box-decoration-break
    - include: property-box-shadow
    - include: property-box-sizing
    - include: property-box-snap
    - include: property-break-before-after
    - include: property-break-inside
    - include: property-caption-side
    - include: property-caret-color
    - include: property-caret-shape
    - include: property-clip-path
    - include: property-clip-rule
    - include: property-color-adjust
    - include: property-color-interpolation-filters
    - include: property-color-rendering
    - include: property-column-count
    - include: property-column-fill
    - include: property-column-rule
    - include: property-column-rule-color
    - include: property-column-rule-style
    - include: property-column-rule-width
    - include: property-column-span
    - include: property-column-width
    - include: property-counter-set-reset-increment
    - include: property-cue-before-after
    - include: property-dominant-baseline
    - include: property-empty-cells
    - include: property-fill-break
    - include: property-fill-color
    - include: property-fill-image
    - include: property-fill-opacity
    - include: property-fill-origin
    - include: property-fill-position
    - include: property-fill-repeat
    - include: property-fill-rule
    - include: property-fill-size
    - include: property-flex-basis
    - include: property-flex-direction
    - include: property-flex-flow
    - include: property-flex-shrink-grow
    - include: property-flex-wrap
    - include: property-float-defer
    - include: property-float-offset
    - include: property-float-reference
    - include: property-flood-color
    - include: property-flood-opacity
    - include: property-flow-from
    - include: property-flow-into
    - include: property-font-family
    - include: property-font-feature-settings
    - include: property-font-kerning
    - include: property-font-language-override
    - include: property-font-optical-sizing
    - include: property-font-palette
    - include: property-font-presentation
    - include: property-font-size
    - include: property-font-size-adjust
    - include: property-font-stretch
    - include: property-font-style
    - include: property-font-synthesis
    - include: property-font-variant
    - include: property-font-variant-alternates
    - include: property-font-variant-caps
    - include: property-font-variant-east-asian
    - include: property-font-variant-emoji
    - include: property-font-variant-ligatures
    - include: property-font-variant-numeric
    - include: property-font-variant-position
    - include: property-font-variation-settings
    - include: property-font-weight
    - include: property-footnote-display
    - include: property-footnote-policy
    - include: property-grid-auto-flow
    - include: property-grid-auto-rows-columns
    - include: property-grid-row-column-area
    - include: property-grid-template-areas
    - include: property-grid-template-rows-columns
    - include: property-grid-template
    - include: property-hanging-punctuation
    - include: property-hyphenate-character
    - include: property-hyphenate-limit-chars
    - include: property-hyphenate-limit-last
    - include: property-hyphenate-limit-lines
    - include: property-hyphenate-limit-zone
    - include: property-image-orientation
    - include: property-image-rendering
    - include: property-image-resolution
    - include: property-initial-letter-align
    - include: property-initial-letter-wrap
    - include: property-initial-letter
    - include: property-inset-block-inline
    - include: property-justify-content
    - include: property-justify-items
    - include: property-justify-self
    - include: property-letter-spacing
    - include: property-lighting-color
    - include: property-line-break
    - include: property-line-grid
    - include: property-line-height
    - include: property-line-height-step
    - include: property-line-snap
    - include: property-list-style-image
    - include: property-list-style-position
    - include: property-list-style-type
    - include: property-list-style
    - include: property-margin-block-inline
    - include: property-marker-knockout
    - include: property-marker-pattern
    - include: property-marker-side
    - include: property-marker-start-segment-mid-end
    - include: property-mask-border-mode
    - include: property-mask-border-outset
    - include: property-mask-border-repeat
    - include: property-mask-border-slice
    - include: property-mask-border-source
    - include: property-mask-border-width
    - include: property-mask-border
    - include: property-mask-clip
    - include: property-mask-composite
    - include: property-mask-image
    - include: property-mask-mode
    - include: property-mask-origin
    - include: property-mask-position
    - include: property-mask-repeat
    - include: property-mask-size
    - include: property-mask-type
    - include: property-max-lines
    - include: property-mix-blend-mode
    - include: property-motion-offset
    - include: property-motion-path
    - include: property-motion-rotation
    - include: property-nav-up-right-left-down
    - include: property-object-fit
    - include: property-object-position
    - include: property-offset-anchor
    - include: property-offset-distance
    - include: property-offset-path
    - include: property-offset-position
    - include: property-offset-rotate
    - include: property-offset-start-end-before-after
    - include: property-outline-color
    - include: property-outline-offset
    - include: property-outline-style
    - include: property-outline-width
    - include: property-overflow-wrap
    - include: property-overflow-x-y
    - include: property-padding-block-inline
    - include: property-page-break-before-after
    - include: property-page-break-inside
    - include: property-paint-order
    - include: property-perspective-origin
    - include: property-place-content
    - include: property-place-items
    - include: property-place-self
    - include: property-pointer-events
    - include: property-polar-anchor
    - include: property-polar-angle
    - include: property-polar-distance
    - include: property-polar-origin
    - include: property-presentation-level
    - include: property-region-fragment
    - include: property-rotation-point
    - include: property-ruby-align
    - include: property-ruby-merge
    - include: property-ruby-position
    - include: property-scroll-behavior
    - include: property-scroll-margin
    - include: property-scroll-padding
    - include: property-scroll-snap-align
    - include: property-scroll-snap-stop
    - include: property-scroll-snap-type
    - include: property-shape-image-threshold
    - include: property-shape-inside
    - include: property-shape-margin
    - include: property-shape-outside
    - include: property-shape-rendering
    - include: property-speak-as
    - include: property-stop-color
    - include: property-stop-opacity
    - include: property-string-set
    - include: property-stroke-align
    - include: property-stroke-alignment
    - include: property-stroke-break
    - include: property-stroke-color
    - include: property-stroke-dashadjust
    - include: property-stroke-dasharray
    - include: property-stroke-dashcorner
    - include: property-stroke-dash-corner
    - include: property-stroke-dash-justify
    - include: property-stroke-dashoffset
    - include: property-stroke-image
    - include: property-stroke-linecap
    - include: property-stroke-linejoin
    - include: property-stroke-miterlimit
    - include: property-stroke-opacity
    - include: property-stroke-origin
    - include: property-stroke-position
    - include: property-stroke-repeat
    - include: property-stroke-width
    - include: property-tab-size
    - include: property-table-layout
    - include: property-text-align
    - include: property-text-align-all
    - include: property-text-align-last
    - include: property-text-anchor
    - include: property-text-combine-upright
    - include: property-text-decoration
    - include: property-text-decoration-color
    - include: property-text-decoration-line
    - include: property-text-decoration-skip
    - include: property-text-decoration-skip-ink
    - include: property-text-decoration-style
    - include: property-text-decoration-width
    - include: property-text-emphasis
    - include: property-text-emphasis-color
    - include: property-text-emphasis-position
    - include: property-text-emphasis-skip
    - include: property-text-emphasis-style
    - include: property-text-indent
    - include: property-text-justify
    - include: property-text-orientation
    - include: property-text-overflow
    - include: property-text-rendering
    - include: property-text-shadow
    - include: property-text-size-adjust
    - include: property-text-space-collapse
    - include: property-text-space-trim
    - include: property-text-spacing
    - include: property-text-transform
    - include: property-text-underline-offset
    - include: property-text-underline-position
    - include: property-text-wrap
    - include: property-transform-box
    - include: property-transform-origin
    - include: property-transform-style
    - include: property-transition-delay
    - include: property-transition-duration
    - include: property-transition-property
    - include: property-transition-timing-function
    - include: property-unicode-bidi
    - include: property-user-select
    - include: property-vector-effect
    - include: property-vertical-align
    - include: property-voice-balance
    - include: property-voice-duration
    - include: property-voice-family
    - include: property-voice-range-pitch
    - include: property-voice-rate
    - include: property-voice-stress
    - include: property-voice-volume
    - include: property-white-space
    - include: property-will-change
    - include: property-word-break
    - include: property-word-spacing
    - include: property-word-wrap
    - include: property-wrap-before-after
    - include: property-wrap-flow
    - include: property-wrap-inside
    - include: property-wrap-through
    - include: property-writing-mode
    - include: property-z-index

    # Single-word properties are given a lower precedence to avoid collisions.
    - include: property-all
    - include: property-animation
    - include: property-appearance
    - include: property-background
    - include: property-bleed
    - include: property-border
    - include: property-caret
    - include: property-chains
    - include: property-clear
    - include: property-color
    - include: property-columns
    - include: property-composes
    - include: property-contain
    - include: property-content
    - include: property-continue
    - include: property-cursor
    - include: property-direction
    - include: property-display
    - include: property-fill
    - include: property-filter
    - include: property-flex
    - include: property-float
    - include: property-flow
    - include: property-font
    - include: property-grid
    - include: property-row-column-gap
    - include: property-height
    - include: property-hyphens
    - include: property-isolation
    - include: property-margin
    - include: property-marker
    - include: property-marks
    - include: property-mask
    - include: property-motion
    - include: property-offset
    - include: property-opacity
    - include: property-order
    - include: property-outline
    - include: property-overflow
    - include: property-padding
    - include: property-page
    - include: property-pause
    - include: property-perspective
    - include: property-position
    - include: property-quotes
    - include: property-resize
    - include: property-rest
    - include: property-rotation
    - include: property-running
    - include: property-size
    - include: property-speak
    - include: property-stroke
    - include: property-top-right-left-bottom
    - include: property-transform
    - include: property-transition
    - include: property-visibility
    - include: property-widows-orphans
    - include: property-width

    # User-defined properties
    - include: property-custom

  # align-content is defined in two specs:
  #     CSS Box Alignment Module Level 3
  #     CSS Flexible Box Layout Module Level 1 (subset of Box Alignment Level 3)
  property-align-content:
    - match: \b(align-content)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.align-content.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnormal{{b}}'
          scope: support.constant.property-value.css
        - include: baseline-position
        - include: content-distribution
        - include: overflow-position
        - include: content-position
        - include: aspect-ratio
        - include: number
    - include: stray-paren-or-semicolon

  # align-items is defined in two specs:
  #     CSS Box Alignment Module Level 3
  #     CSS Flexible Box Layout Module Level 1 (subset of Box Alignment Level 3)
  property-align-items:
    - match: \b(align-items)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.align-items.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:stretch|normal){{b}}'
          scope: support.constant.property-value.css
        - include: baseline-position
        - include: overflow-position
        - include: self-position
    - include: stray-paren-or-semicolon

  # align-self is defined in two specs:
  #     CSS Box Alignment Module Level 3
  #     CSS Flexible Box Layout Module Level 1 (subset of Box Alignment Level 3)
  property-align-self:
    - match: \b(align-self)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.align-self.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:stretch|normal|auto){{b}}'
          scope: support.constant.property-value.css
        - include: baseline-position
        - include: overflow-position
        - include: self-position
    - include: stray-paren-or-semicolon

  # alignment-baseline is defined in two specs:
  #     CSS Inline Layout Module Level 3
  #     SVG 2
  property-alignment-baseline:
    - match: \b(alignment-baseline)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.alignment-baseline.css
        - include: end-value
        - include: value-css-wide
        - match: '(?x)
            \b
            (?:
              top|
              text-top|
              text-bottom|
              text-before-edge|
              text-after-edge|
              middle|
              mathematical|
              ideographic|
              hanging|
              central|
              center|
              bottom|
              before-edge|
              baseline|
              auto|
              alphabetic|
              after-edge
            )
            {{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Cascading and Inheritance Level 4
  property-all:
    - match: \b(all)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.all.css
        - include: end-value
        - include: value-css-wide
    - include: stray-paren-or-semicolon

  # CSS Animations Level 1
  property-animation:
    - match: \b(animation)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.animation.css
        - include: end-value
        - include: value-css-wide
        - include: single-animation-play-state
        - include: single-animation-fill-mode
        - include: single-animation-direction
        - include: single-timing-function
        - include: time
        - include: single-animation-iteration-count
        - match: \bnone{{b}}
          scope: support.constant.property-value.css
        - include: keyframes-name
    - include: stray-paren-or-semicolon

  # CSS Animations Level 2
  property-animation-composition:
    - match: \b(animation-composition)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.animation-composition.css
        - include: end-value
        - include: value-css-wide
        - include: single-animation-composition
    - include: stray-paren-or-semicolon

  # CSS Animations Level 1
  property-animation-delay:
    - match: \b(animation-delay)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.animation-delay.css
        - include: end-value
        - include: value-css-wide
        - include: time
    - include: stray-paren-or-semicolon

  # CSS Animations Level 1
  property-animation-direction:
    - match: \b(animation-direction)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.animation-direction.css
        - include: end-value
        - include: value-css-wide
        - include: single-animation-direction
    - include: stray-paren-or-semicolon

  # CSS Animations Level 1
  property-animation-duration:
    - match: \b(animation-duration)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.animation-duration.css
        - include: end-value
        - include: value-css-wide
        - include: time
    - include: stray-paren-or-semicolon

  # CSS Animations Level 1
  property-animation-fill-mode:
    - match: \b(animation-fill-mode)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.animation-fill-mode.css
        - include: end-value
        - include: value-css-wide
        - include: single-animation-fill-mode
    - include: stray-paren-or-semicolon

  # CSS Animations Level 1
  property-animation-iteration-count:
    - match: \b(animation-iteration-count)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.animation-iteration-count.css
        - include: end-value
        - include: value-css-wide
        - include: single-animation-iteration-count
    - include: stray-paren-or-semicolon

  # CSS Animations Level 1
  property-animation-name:
    - match: \b(animation-name)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.animation-name.css
        - include: end-value
        - include: value-css-wide
        - match: \bnone{{b}}
          scope: support.constant.property-value.css
        - include: keyframes-name
    - include: stray-paren-or-semicolon

  # CSS Animations Level 1
  property-animation-play-state:
    - match: \b(animation-play-state)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.animation-play-state.css
        - include: end-value
        - include: value-css-wide
        - include: single-animation-play-state
    - include: stray-paren-or-semicolon

  # CSS Animations Level 1
  property-animation-timing-function:
    - match: \b(animation-timing-function)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.animation-timing-function.css
        - include: end-value
        - include: value-css-wide
        - include: single-timing-function
    - include: stray-paren-or-semicolon

  # CSS Basic User Interface Module Level 4
  property-appearance:
    - match: ((?:-webkit-|-moz-)?\bappearance)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.appearance.css
        - include: end-value
        - include: value-css-wide
        - match: \b(?:none|auto){{b}}
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Transforms Module Level 2
  property-backface-visibility:
    - match: \b(backface-visibility)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.backface-visibility.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:visible|hidden){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-background-attachment:
    - match: \b(background-attachment)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.background-attachment.css
        - include: end-value
        - include: value-css-wide
        - include: attachment
    - include: stray-paren-or-semicolon

  # Compositing and Blending Level 1
  property-background-blend-mode:
    - match: \b(background-blend-mode)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.background-blend-mode.css
        - include: end-value
        - include: value-css-wide
        - include: blend-mode
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-background-clip:
    - match: \b(background-clip)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.background-clip.css
        - include: end-value
        - include: value-css-wide
        - include: box
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-background-color:
    - match: \b(background-color)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.background-color.css
        - include: end-value
        - include: value-css-wide
        - include: color
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-background-image:
    - match: \b(background-image)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.background-image.css
        - include: end-value
        - include: value-css-wide
        - include: bg-image
    - include: stray-paren-or-semicolon

  # CSS Logical Properties and Values Level 1
  property-background-image-transform:
    - match: \b(background-image-transform)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.background-image-transform.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:rotate|physical|logical){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-background-origin:
    - match: \b(background-origin)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.background-origin.css
        - include: end-value
        - include: value-css-wide
        - include: box
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-background-position:
    - match: \b(background-position)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.background-position.css
        - include: end-value
        - include: value-css-wide
        - include: position
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-background-repeat:
    - match: \b(background-repeat)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.background-repeat.css
        - include: end-value
        - include: value-css-wide
        - include: repeat-style
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-background-size:
    - match: \b(background-size)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.background-size.css
        - include: end-value
        - include: value-css-wide
        - include: bg-size
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-background:
    - match: \b(background)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.background.css
        - include: end-value
        - include: value-css-wide
        - include: bg-image
        - include: bg-size
        - include: repeat-style
        - include: box
        - include: attachment
        - include: color
        - include: position
        - match: '\/'
          scope: keyword.operator.arithmetic.css
    - include: stray-paren-or-semicolon

  # baseline-shift is defined in two specs:
  #     CSS Inline Layout Module Level 3
  #     SVG 2
  property-baseline-shift:
    - match: \b(baseline-shift)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.baseline-shift.css
        - include: end-value
        - include: value-css-wide
        - include: baseline-shift
    - include: stray-paren-or-semicolon

  # CSS Paged Media Module Level 3
  property-bleed:
    - match: \b(bleed)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.bleed.css
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: length
    - include: stray-paren-or-semicolon

  # CSS Logical Properties and Values Level 1
  property-block-inline-size:
    - match: '{{optional_min_max_prefix}}(?:block-size|inline-size)\s*(:)'
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.block-inline-size.css
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: length-non-negative
        - include: percentage-non-negative
    - include: stray-paren-or-semicolon

  # CSS Rhythmic Sizing
  property-block-step:
    - match: \b(block-step)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.block-step.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:up|start|padding|none|nearest|margin|end|down|center|auto){{b}}'
          scope: support.constant.property-value.css
        - include: length-non-negative
    - include: stray-paren-or-semicolon

  # CSS Rhythmic Sizing
  property-block-step-align:
    - match: \b(block-step-align)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.block-step-align.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:start|end|center|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Rhythmic Sizing
  property-block-step-insert:
    - match: \b(block-step-insert)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.block-step-insert.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:padding|margin){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Rhythmic Sizing
  property-block-step-round:
    - match: \b(block-step-round)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.block-step-round.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:up|nearest|down){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Rhythmic Sizing
  property-block-step-size:
    - match: \b(block-step-size)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.block-step-size.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: length-non-negative
    - include: stray-paren-or-semicolon

  # CSS Generated Content Module Level 3
  property-bookmark-label:
    - match: \b(bookmark-label)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.bookmark-label.css
        - include: end-value
        - include: value-css-wide
        - include: content-list
    - include: stray-paren-or-semicolon

  # CSS Generated Content Module Level 3
  property-bookmark-level:
    - match: \b(bookmark-level)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.bookmark-level.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: integer-positive
    - include: stray-paren-or-semicolon

  # CSS Generated Content Module Level 3
  property-bookmark-state:
    - match: \b(bookmark-state)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.bookmark-state.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:open|closed){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-border:
    - match: \b(border)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.border.css
        - include: end-value
        - include: value-css-wide
        - include: color
        - include: border-width
        - include: border-style
    - include: stray-paren-or-semicolon

  # CSS Logical Properties and Values Level 1
  property-border-block-inline:
    - match: \b(border-block-inline)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.border-block-inline.css
        - include: end-value
        - include: value-css-wide
        - include: line-style
        - include: line-width
        - include: color
    - include: stray-paren-or-semicolon

  # CSS Logical Properties and Values Level 1
  property-border-block-inline-color:
    - match: \b(border-inline-start-color|border-inline-end-color|border-inline-color|border-block-start-color|border-block-end-color|border-block-color)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.border-block-inline-color.css
        - include: end-value
        - include: value-css-wide
        - include: color
    - include: stray-paren-or-semicolon

  # CSS Logical Properties and Values Level 1
  property-border-block-inline-style:
    - match: \b(border-inline-style|border-inline-start-style|border-inline-end-style|border-block-style|border-block-start-style|border-block-end-style)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.border-block-inline-style.css
        - include: end-value
        - include: value-css-wide
        - include: line-style
    - include: stray-paren-or-semicolon

  # CSS Logical Properties and Values Level 1
  property-border-block-inline-width:
    - match: \b(border-inline-width|border-inline-start-width|border-inline-end-width|border-block-width|border-block-start-width|border-block-end-width)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.border-block-inline-width.css
        - include: end-value
        - include: value-css-wide
        - include: line-width
    - include: stray-paren-or-semicolon

  # CSS Round Display Level 1
  property-border-boundary:
    - match: \b(border-boundary)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.border-boundary.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:parent|none|display){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS 2.1
  property-border-collapse:
    - match: \b(border-collapse)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.border-collapse.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:separate|collapse){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-border-color:
    - match: \b(border-{{optional_top_right_left_bottom}}color)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.border-color.css
        - include: end-value
        - include: value-css-wide
        - include: color
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-border-image:
    - match: \b(border-image)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.border-image.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:stretch|space|round|repeat|none|fill|auto){{b}}'
          scope: support.constant.property-value.css
        - include: image
        - include: percentage-non-negative
        - include: length-non-negative
        - include: integer-non-negative
        - include: number-non-negative
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-border-image-outset:
    - match: \b(border-image-outset)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.border-image-outset.css
        - include: end-value
        - include: value-css-wide
        - include: length-non-negative
        - include: number-non-negative
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-border-image-repeat:
    - match: \b(border-image-repeat)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.border-image-repeat.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:stretch|space|round|repeat){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-border-image-slice:
    - match: \b(border-image-slice)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.border-image-slice.css
        - include: end-value
        - include: value-css-wide
        - match: '\bfill{{b}}'
          scope: support.constant.property-value.css
        - include: percentage-non-negative
        - include: integer-non-negative
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-border-image-source:
    - match: \b(border-image-source)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.border-image-source.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: image
    - include: stray-paren-or-semicolon

  # CSS Logical Properties and Values Level 1
  property-border-image-transform:
    - match: \b(border-image-transform)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.border-image-transform.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:rotate|physical|logical){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-border-image-width:
    - match: \b(border-image-width)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.border-image-width.css
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: percentage-non-negative
        - include: length-non-negative
        - include: number-non-negative
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-border-radius:
    - match: \b(border-(?:top-right-|top-left-|bottom-right-|bottom-left-)?radius)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.border-radius.css
        - include: end-value
        - include: value-css-wide
        - include: percentage-non-negative
        - include: length-non-negative
        - match: '\/'
          scope: keyword.operator.arithmetic.css
    - include: stray-paren-or-semicolon

  # CSS 2.1
  property-border-spacing:
    - match: \b(border-spacing)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.border-spacing.css
        - include: end-value
        - include: value-css-wide
        - include: length-non-negative
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-border-style:
    - match: \b(border-{{optional_top_right_left_bottom}}style)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.border-style.css
        - include: end-value
        - include: value-css-wide
        - include: border-style
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-border-top-right-left-bottom:
    - match: \b(border-(?:top|right|left|bottom))\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.border-top-right-left-bottom.css
        - include: end-value
        - include: value-css-wide
        - include: color
        - include: border-width
        - include: border-style
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-border-width:
    - match: \b(border-{{optional_top_right_left_bottom}}width)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.border-width.css
        - include: end-value
        - include: value-css-wide
        - include: border-width
    - include: stray-paren-or-semicolon

  # CSS Fragmentation Module Level 3
  property-box-decoration-break:
    - match: \b(box-decoration-break)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.box-decoration-break.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:slice|clone){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Backgrounds and Borders Module Level 3
  property-box-shadow:
    - match: \b(box-shadow)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.box-shadow.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:none|inset){{b}}'
          scope: support.constant.property-value.css
        - include: length
        - include: color
    - include: stray-paren-or-semicolon

  # CSS Basic User Interface Module Level 3
  property-box-sizing:
    - match: \b(box-sizing)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.box-sizing.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:content-box|border-box){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Line Grid Module Level 1
  property-box-snap:
    - match: \b(box-snap)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.box-snap.css
        - include: end-value
        - include: value-css-wide
        - match: '(?x)
            \b
            (?:
              none|
              last-baseline|
              center|
              block-start|
              block-end|
              baseline
            )
            {{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # break-after and break-before are defined in two specs:
  #     CSS Fragmentation Module Level 3
  #     CSS Regions Module Level 1
  property-break-before-after:
    - match: \b(break-before|break-after)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.break-before-after.css
        - include: end-value
        - include: value-css-wide
        - match: '(?x)
            \b
            (?:
              verso|
              right|
              region|
              recto|
              page|
              left|
              column|
              avoid-region|
              avoid-page|
              avoid-column|
              avoid|
              auto
            )
            {{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Regions Module Level 1
  property-break-inside:
    - match: \b(break-inside)\s*(:)
      captures:
        1: support.constant.property-break-inside.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.break-inside.css
        - include: end-value
        - include: value-css-wide
        - match: '(?x)
            \b
            (?:
              avoid-region|
              avoid-page|
              avoid-column|
              avoid|
              auto
            )
            {{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS 2.1
  property-caption-side:
    - match: \b(caption-side)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.caption-side.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:top|inline-start|inline-end|bottom){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Basic User Interface Module Level 4
  property-caret-color:
    - match: \b(caret-color)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.caret-color.css
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: color
    - include: stray-paren-or-semicolon

  # CSS Basic User Interface Module Level 4
  property-caret-shape:
    - match: \b(caret-shape)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.caret-shape.css
        - include: end-value
        - include: value-css-wide
        - include: caret-shape
    - include: stray-paren-or-semicolon

  # CSS Basic User Interface Module Level 4
  property-caret:
    - match: \b(caret)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.caret.css
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: caret-shape
        - include: color
    - include: stray-paren-or-semicolon

  # CSS Template Layout Module
  property-chains:
    - match: \b(chains)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.chains.css
        - include: end-value
        - match: '\bnone{{b}}|[@*]'
          scope: support.constant.property-value.css
        - include: value-css-wide
        - include: identifier
    - include: stray-paren-or-semicolon

  # CSS Page Floats
  property-clear:
    - match: \b(clear)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.clear.css
        - include: end-value
        - include: value-css-wide
        - match: '(?x)
            \b
            (?:
              top|
              right|
              none|
              left|
              inline-start|
              inline-end|
              bottom|
              both-inline|
              both-block|
              both|
              block-start|
              block-end
            )
            {{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Masking Module Level 1
  property-clip-path:
    - match: ({{webkit}}\bclip-path)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.clip-path.css
        - include: end-value
        - include: value-css-wide
        - include: func-url
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: geometry-box
        - include: basic-shape
    - include: stray-paren-or-semicolon

  # CSS Masking Module Level 1
  property-clip-rule:
    - match: \b(clip-rule)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.clip-rule.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:nonzero|evenodd){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Color Module Level 4
  property-color:
    - match: \b(color)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.color.css
        - include: end-value
        - include: value-css-wide
        - include: color
    - include: stray-paren-or-semicolon

  # CSS Color Module Level 4
  property-color-adjust:
    - match: \b(color-adjust)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.color-adjust.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:exact|economy){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # Filter Effects Module Level 1
  property-color-interpolation-filters:
    - match: \b(color-interpolation-filters)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.color-interpolation-filters.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:sRGB|linearRGB|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # SVG 2
  property-color-rendering:
    - match: \b(color-rendering)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.color-rendering.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:optimizeSpeed|optimizeQuality|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Multi-column Layout Module
  property-columns:
    - match: \b(columns)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.columns.css
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: length-positive
        - include: integer-positive
    - include: stray-paren-or-semicolon

  # CSS Multi-column Layout Module
  property-column-count:
    - match: ((?:-webkit-|-moz-)?\bcolumn-count)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.column-count.css
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: integer-positive
    - include: stray-paren-or-semicolon

  # CSS Multi-column Layout Module
  property-column-fill:
    - match: ((?:-webkit-|-moz-)?\bcolumn-fill)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.column-fill.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:balance-all|balance|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Multi-column Layout Module
  property-column-rule:
    - match: ((?:-webkit-|-moz-)?\bcolumn-rule)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.column-rule.css
        - include: end-value
        - include: value-css-wide
        - include: line-style
        - include: line-width
        - include: color
    - include: stray-paren-or-semicolon

  # CSS Multi-column Layout Module
  property-column-rule-color:
    - match: ((?:-webkit-|-moz-)?\bcolumn-rule-color)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.column-rule-color.css
        - include: end-value
        - include: value-css-wide
        - include: color
    - include: stray-paren-or-semicolon

  # CSS Multi-column Layout Module
  property-column-rule-style:
    - match: ((?:-webkit-|-moz-)?\bcolumn-rule-style)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.column-rule-style.css
        - include: end-value
        - include: value-css-wide
        - include: line-style  # identical to <border-style>
    - include: stray-paren-or-semicolon

  # CSS Multi-column Layout Module
  property-column-rule-width:
    - match: ((?:-webkit-|-moz-)?\bcolumn-rule-width)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.column-rule-width.css
        - include: end-value
        - include: value-css-wide
        - include: line-width  # identical to <border-width>
    - include: stray-paren-or-semicolon

  # CSS Multi-column Layout Module
  property-column-span:
    - match: ((?:-webkit-|-moz-)?\bcolumn-span)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.column-span.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:none|all){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Multi-column Layout Module
  property-column-width:
    - match: ((?:-webkit-|-moz-)?\bcolumn-width)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.column-width.css
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: length-positive
    - include: stray-paren-or-semicolon

  # Nonstandard CSS Modules Spec
  # https://github.com/css-modules/css-modules
  property-composes:
    - match: \b(composes)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.composes.css
        - include: end-value
        - include: value-css-wide
        - match: '\bfrom{{b}}'
          scope: support.constant.property-value.css
        - include: string
        - include: identifier
    - include: stray-paren-or-semicolon

  # CSS Containment Module Level 1
  property-contain:
    - match: \b(contain)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.contain.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:style|strict|size|paint|none|layout|content){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Generated Content Module Level 3
  property-content:
    - match: \b(content)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.content.css
        - include: end-value
        - include: value-css-wide
        - include: func-counters
        - include: func-counter
        - include: func-string
        - include: func-attr
        - include: image
        - match: '\b(?:normal|none){{b}}'
          scope: support.constant.property-value.css
        - include: content-list
        - match: '\/'
          scope: keyword.operator.arithmetic.css
    - include: stray-paren-or-semicolon

  # CSS Overflow Module Level 4
  property-continue:
    - match: \b(continue)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.continue.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:paginate|overflow|fragments|discard|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Lists and Counters Module Level 3
  property-counter-set-reset-increment:
    - match: \b(counter-(?:set|reset|increment))\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.counter-set-reset-increment.css
        - include: end-value
        - include: value-css-wide
        - include: func-attr
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: integer
        - include: identifier
    - include: stray-paren-or-semicolon

  # CSS Speech Module
  property-cue-before-after:
    - match: \b(cue-before|cue-after|cue)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.cue-before-after.css
        - include: end-value
        - include: value-css-wide
        - include: func-url
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: decibel
    - include: stray-paren-or-semicolon

  # CSS Basic User Interface Module Level 3
  # SVG 2
  property-cursor:
    - match: \b(cursor)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.cursor.css
        - include: end-value
        - include: value-css-wide
        - include: func-url
        - match: '(?x)
            \b
            (?:
              zoom-out|
              zoom-in|
              wait|
              w-resize|
              vertical-text|
              text|
              sw-resize|
              se-resize|
              s-resize|
              row-resize|
              progress|
              pointer|
              nwse-resize|
              nw-resize|
              ns-resize|
              not-allowed|
              none|
              no-drop|
              nesw-resize|
              ne-resize|
              n-resize|
              move|
              help|
              grabbing|
              grab|
              ew-resize|
              e-resize|
              default|
              crosshair|
              copy|
              context-menu|
              col-resize|
              cell|
              auto|
              all-scroll|
              alias
            )
            {{b}}'
          scope: support.constant.property-value.css
        - include: number
    - include: stray-paren-or-semicolon

  property-custom:
    - match: '({{custom_property_name}})\s*(:)'
      captures:
        1: support.type.property-name.custom.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.custom.css
        - include: end-value
        - include: value-css-wide
        - include: any-value
    - include: stray-paren-or-semicolon

  property-custom-declaration:
    - match: '({{custom_property_name}})\s*(:)'
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - match: ';'
          scope: punctuation.terminator.custom-property.css
          pop: true
        - match: '{'
          scope: punctuation.section.declaration-list.begin.css
          push:
            - meta_scope: meta.declaration-list.css
            - match: '}'
              scope: punctuation.section.declaration-list.end.css
              pop: true
            - include: properties
        - include: stray-brace
    - include: stray-semicolon

  property-deprecated:
    - match: '(?x)
        {{vendor_prefix}}
        \b
        (?:
          zoom|
          wrap-padding|
          wrap-option|
          wrap-margin|
          wrap|
          word-break-inside|
          word-break-cjk|
          white-space-treatment|
          white-space-collapsing|
          white-space-collapse|
          voice-pitch-range|
          vertical-position|
          user-zoom|
          user-modify|
          user-input|
          user-focus|
          text-underline-width|
          text-underline-style|
          text-underline-mode|
          text-underline-color|
          text-underline|
          text-trim|
          text-script|
          text-replace|
          text-overline-width|
          text-overline-style|
          text-overline-mode|
          text-overline-color|
          text-overline|
          text-overflow-mode|
          text-overflow-ellipsis|
          text-outline|
          text-line-through-width|
          text-line-through-style|
          text-line-through-mode|
          text-line-through-color|
          text-line-through|
          text-kashida-space|
          text-justify-trim|
          text-first-indent|
          text-combine-mode|
          text-combine-horizontal|
          text-combine|
          text-block-indent|
          text-blink|
          text-autospace|
          text-align-first|
          target-position|
          target-new|
          target-name|
          target|
          tab-side|
          speakability|
          scroll-snap-points-y|
          scroll-snap-points-x|
          scroll-snap-destination|
          scroll-snap-coordinate|
          resolution|
          resizer|
          rendering-intent|
          region-overflow|
          punctuation-trim|
          progress-appearance|
          phonemes|
          page-policy|
          overflow-clip|
          orientation|
          nav-index|
          move-to|
          min-zoom|
          min-font-size|
          max-zoom|
          max-font-size|
          mask-source-type|
          mask-box-width|
          mask-box-source|
          mask-box-slice|
          mask-box-repeat|
          mask-box-outset|
          mask-box-image-width|
          mask-box-image-source|
          mask-box-image-slice|
          mask-box-image-repeat|
          mask-box-image-outset|
          mask-box-image|
          mask-box|
          marquee-repetition|
          marquee-play-count|
          marquee|
          mark-before|
          mark-after|
          mark|
          linefeed-treatment|
          line-slack|
          line-grid-progression|
          line-grid-mode|
          layout-flow|
          key-equivalent|
          kerning-pair-threshold|
          kerning-mode|
          interpolation-mode|
          indent-edge-reset|
          ime-mode|
          icon|
          hyphenate-resource|
          hyphenate-lines|
          hyphenate-limit-before|
          hyphenate-limit-after|
          hyphenate-dictionary|
          hyphenate-before|
          hyphenate-after|
          hyphenate|
          grid-start|
          grid-span|
          grid-rows|
          grid-row-span|
          grid-row-sizing|
          grid-row-position|
          grid-row-gap|
          grid-row-align|
          grid-position|
          grid-gap|
          grid-flow|
          grid-end|
          grid-definition-rows|
          grid-definition-columns|
          grid-columns|
          grid-column-span|
          grid-column-sizing|
          grid-column-position|
          grid-column-gap|
          grid-column-align|
          grid-cell-stacking|
          grid-cell|
          grid-before|
          grid-auto-position|
          grid-after|
          glyph-orientation-vertical|
          glyph-orientation-horizontal|
          font-smooth|
          float-displace|
          flex-pack|
          flex-order|
          flex-line-pack|
          flex-item-align|
          flex-align|
          fit-position|
          fit|
          filter-margin-top|
          filter-margin-right|
          filter-margin-left|
          filter-margin-bottom|
          filter-margin|
          enable-background|
          display-role|
          display-outside|
          display-model|
          display-list|
          display-inside|
          display-extras|
          display-box|
          crop|
          content-order|
          column-break-before|
          column-break-after|
          color-profile|
          clip|
          clear-after|
          box-width|
          box-reflect|
          box-pack|
          box-orient|
          box-ordinal-group|
          box-lines|
          box-height|
          box-flex-group|
          box-flex|
          box-direction|
          box-break|
          box-align|
          border-length|
          border-break|
          bookmark-target|
          block-progression|
          binding|
          bikeshedding|
          behavior|
          background-spacing|
          background-quantity|
          background-break|
          all-space-treatment|
          accelerator
        )
        {{b}}'  # "clip" won't match "clip-path"
      scope: support.type.property-name.css invalid.deprecated.css

  # direction is defined in two specs:
  #     CSS Writing Modes Level 3
  #     SVG 2
  property-direction:
    - match: \b(direction)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.direction.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:rtl|ltr){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # display is defined in two specs:
  #     CSS Display Module Level 3
  #     SVG 2
  property-display:
    - match: \b(display)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.display.css
        - include: end-value
        - include: value-css-wide
        - include: display-outside
        - include: display-inside
        - include: display-listitem
        - include: display-internal
        - include: display-box
        - include: display-legacy
    - include: stray-paren-or-semicolon

  # dominant-baseline is defined in two specs:
  #     CSS Inline Layout Module Level 3
  #     SVG 2
  property-dominant-baseline:
    - match: \b(dominant-baseline)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.dominant-baseline.css
        - include: end-value
        - include: value-css-wide
        - match: '(?x)
            \b
            (?:
              text-top|
              text-bottom|
              middle|
              mathematical|
              ideographic|
              hanging|
              central|
              auto|
              alphabetic
            )
            {{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS2.1
  property-empty-cells:
    - match: \b(empty-cells)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.empty-cells.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:show|hide){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # SVG 2
  property-fill:
    - match: \b(fill)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.fill.css
        - include: end-value
        - include: value-css-wide
        - include: bg-image
        - include: bg-size
        - include: repeat-style
        - include: box
        - include: attachment
        - include: color
        - include: position
    - include: stray-paren-or-semicolon

  # CSS Fill and Stroke Module Level 3
  property-fill-break:
    - match: \b(fill-break)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.fill-break.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:slice|clone|bounding-box){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Fill and Stroke Module Level 3
  property-fill-color:
    - match: \b(fill-color)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.fill-color.css
        - include: end-value
        - include: value-css-wide
        - include: color
    - include: stray-paren-or-semicolon

  # CSS Fill and Stroke Module Level 3
  property-fill-image:
    - match: \b(fill-image)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.fill-image.css
        - include: end-value
        - include: value-css-wide
        - include: paint
    - include: stray-paren-or-semicolon

  # SVG 2
  property-fill-opacity:
    - match: \b(fill-opacity)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.fill-opacity.css
        - include: end-value
        - include: value-css-wide
        - include: number-zero-to-one
    - include: stray-paren-or-semicolon

  # CSS Fill and Stroke Module Level 3
  property-fill-origin:
    - match: \b(fill-origin)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.fill-origin.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:stroke-box|padding-box|match-parent|fill-box|content-box|border-box){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Fill and Stroke Module Level 3
  property-fill-position:
    - match: \b(fill-position)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.fill-position.css
        - include: end-value
        - include: value-css-wide
        - include: position
    - include: stray-paren-or-semicolon

  # CSS Fill and Stroke Module Level 3
  property-fill-repeat:
    - match: \b(fill-repeat)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.fill-repeat.css
        - include: end-value
        - include: value-css-wide
        - include: repeat-style
    - include: stray-paren-or-semicolon

  # SVG 2
  property-fill-rule:
    - match: \b(fill-rule)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.fill-rule.css
        - include: end-value
        - include: value-css-wide
        - include: fill-rule
    - include: stray-paren-or-semicolon

  # CSS Fill and Stroke Module Level 3
  property-fill-size:
    - match: \b(fill-size)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.fill-size.css
        - include: end-value
        - include: value-css-wide
        - include: bg-size
    - include: stray-paren-or-semicolon

  # Filter Effects Module Level 1
  property-filter:
    - match: \b(filter)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.filter.css
        - include: end-value
        - include: value-css-wide
        - include: func-drop-shadow
        - include: func-hue-rotate
        - include: func-filter
        - include: func-blur
        - include: func-url
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Flexible Box Layout Module Level 1
  property-flex:
    - match: \b(flex)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.flex.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:none|initial|content|auto){{b}}'
          scope: support.constant.property-value.css
        - include: percentage-non-negative
        - include: length-non-negative
        - include: number-non-negative
    - include: stray-paren-or-semicolon

  # CSS Flexible Box Layout Module Level 1
  property-flex-basis:
    - match: \b(flex-basis)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.flex-basis.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:content|auto){{b}}'
          scope: support.constant.property-value.css
        - include: width
        - include: percentage-non-negative
        - include: length-non-negative
    - include: stray-paren-or-semicolon

  # CSS Flexible Box Layout Module Level 1
  property-flex-direction:
    - match: \b(flex-direction)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.flex-direction.css
        - include: end-value
        - include: value-css-wide
        - include: flex-direction
    - include: stray-paren-or-semicolon

  # CSS Flexible Box Layout Module Level 1
  property-flex-flow:
    - match: \b(flex-flow)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.flex-flow.css
        - include: end-value
        - include: value-css-wide
        - include: flex-direction
        - include: flex-wrap
    - include: stray-paren-or-semicolon

  # CSS Flexible Box Layout Module Level 1
  property-flex-shrink-grow:
    - match: \b(flex-shrink|flex-grow)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.flex-shrink-grow.css
        - include: end-value
        - include: value-css-wide
        - include: number-non-negative
    - include: stray-paren-or-semicolon

  # CSS Flexible Box Layout Module Level 1
  property-flex-wrap:
    - match: \b(flex-wrap)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.flex-wrap.css
        - include: end-value
        - include: value-css-wide
        - include: flex-wrap
    - include: stray-paren-or-semicolon

  # CSS Page Floats
  property-float:
    - match: \b(float)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.float.css
        - include: end-value
        - include: value-css-wide
        - include: func-snap-block
        - include: func-snap-inline
        - match: '(?x)
            \b
            (?:
              top|
              snap-inline|
              snap-block|
              right|
              none|
              left|
              inline-start|
              inline-end|
              bottom|
              block-start|
              block-end
            )
            {{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Page Floats
  property-float-defer:
    - match: \b(float-defer)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.float-defer.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:none|last){{b}}'
          scope: support.constant.property-value.css
        - include: integer
    - include: stray-paren-or-semicolon

  # CSS Page Floats
  property-float-offset:
    - match: \b(float-offset)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.float-offset.css
        - include: end-value
        - include: value-css-wide
        - include: percentage
        - include: length
    - include: stray-paren-or-semicolon

  # CSS Page Floats
  property-float-reference:
    - match: \b(float-reference)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.float-reference.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:region|page|inline|column){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # Filter Effects Module Level 1
  property-flood-color:
    - match: \b(flood-color)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.flood-color.css
        - include: end-value
        - include: value-css-wide
        - include: color
    - include: stray-paren-or-semicolon

  # Filter Effects Module Level 1
  property-flood-opacity:
    - match: \b(flood-opacity)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.flood-opacity.css
        - include: end-value
        - include: value-css-wide
        - include: percentage
        - include: number
    - include: stray-paren-or-semicolon

  # CSS Template Layout Module
  property-flow:
    - match: \b(flow)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.flow.css
        - include: end-value
        - include: value-css-wide
        - include: string
        - match: '\b(?:same|auto){{b}}'
          scope: support.constant.property-value.css
        - match: '\*'
          scope: support.constant.property-value.css
        - include: identifier
    - include: stray-paren-or-semicolon

  # CSS Regions Module Level 1
  property-flow-from:
    - match: ({{ms}}\bflow-from)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.flow-from.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: identifier
    - include: stray-paren-or-semicolon

  # CSS Regions Module Level 1
  property-flow-into:
    - match: ({{ms}}\bflow-into)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.flow-into.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:none|element|content){{b}}'
          scope: support.constant.property-value.css
        - include: identifier
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 4
  property-font:
    - match: \b(font)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.font.css
        - include: end-value
        - include: value-css-wide
        - include: font-family-generic
        - include: font-family-name
        - match: '(?x)
            \b
            (?:
              xx-small|
              xx-large|
              x-small|
              x-large|
              ultra-expanded|
              ultra-condensed|
              status-bar|
              smaller|
              small-caption|
              small-caps|
              small|
              semi-expanded|
              semi-condensed|
              oblique|
              normal|
              message-box|
              menu|
              medium|
              lighter|
              larger|
              large|
              italic|
              icon|
              extra-expanded|
              extra-condensed|
              expanded|
              condensed|
              caption|
              bolder|
              bold|
              [1-9]00
            )
            {{b}}'
          scope: support.constant.property-value.css
        - include: percentage-non-negative
        - include: length-non-negative
        - include: number-non-negative
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 4
  property-font-family:
    - match: \b(font-family)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.font-family.css
        - include: end-value
        - include: value-css-wide
        - include: font-family-generic
        - include: font-family-name
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 4
  property-font-feature-settings:
    - match: \b(font-feature-settings)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.font-feature-settings.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnormal{{b}}'
          scope: support.constant.property-value.css
        - include: feature-tag-value
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 3
  property-font-kerning:
    - match: ({{webkit}}\bfont-kerning)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.font-kerning.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:normal|none|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 4
  property-font-language-override:
    - match: \b(font-language-override)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.font-language-override.css
        - include: end-value
        - include: value-css-wide
        - include: string
        - match: '\bnormal{{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 4
  property-font-optical-sizing:
    - match: \b(font-optical-sizing)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.font-optical-sizing.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:none|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 4
  property-font-palette:
    - match: \b(font-palette)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.font-palette.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:normal|light|dark){{b}}'
          scope: support.constant.property-value.css
        - include: identifier
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 4
  property-font-presentation:
    - match: \b(font-presentation)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.font-presentation.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:text|emoji|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 4
  property-font-size:
    - match: \b(font-(?:min-|max-)?size)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.font-size.css
        - include: end-value
        - include: value-css-wide
        - match: '(?x)
            \b
            (?:
              xx-small|
              xx-large|
              x-small|
              x-large|
              smaller|
              small|
              medium|
              larger|
              large|
              infinity
            )
            {{b}}'
          scope: support.constant.property-value.css
        - include: percentage-non-negative
        - include: length-non-negative
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 4
  property-font-size-adjust:
    - match: \b(font-size-adjust)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.font-size-adjust.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: number-non-negative
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 4
  property-font-stretch:
    - match: \b(font-stretch)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.font-stretch.css
        - include: end-value
        - include: value-css-wide
        - match: '(?x)
            \b
            (?:
              ultra-expanded|
              ultra-condensed|
              semi-expanded|
              semi-condensed|
              normal|
              extra-expanded|
              extra-condensed|
              expanded|
              condensed
            )
            {{b}}'
          scope: support.constant.property-value.css
        - include: percentage-non-negative
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 4
  property-font-style:
    - match: \b(font-style)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.font-style.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:oblique|normal|italic){{b}}'
          scope: support.constant.property-value.css
        - include: angle
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 4
  property-font-synthesis:
    - match: \b(font-synthesis)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.font-synthesis.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:weight|style|small-caps|none){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 3
  property-font-variant:
    - match: \b(font-variant)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.font-variant.css
        - include: end-value
        - include: value-css-wide
        - include: func-swash-styleset-stylistic-ornaments-character-variant-annotation
        - match: '(?x)
            \b
            (?:
              unicase|
              titling-caps|
              super|
              sub|
              small-caps|
              slashed-zero|
              ruby|
              petite-caps|
              ordinal|
              normal|
              none|
              all-small-caps|
              all-petite-caps
            )
            {{b}}'
          scope: support.constant.property-value.css
        - include: common-lig-values
        - include: discretionary-lig-values
        - include: historical-lig-values
        - include: contextual-alt-values
        - include: numeric-figure-values
        - include: numeric-spacing-values
        - include: numeric-fraction-values
        - include: east-asian-variant-values
        - include: east-asian-width-values
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 4
  property-font-variant-alternates:
    - match: \b(font-variant-alternates)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.font-variant-alternates.css
        - include: end-value
        - include: value-css-wide
        - include: func-swash-styleset-stylistic-ornaments-character-variant-annotation
        - match: '\b(?:normal|historical-forms){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 3
  property-font-variant-caps:
    - match: \b(font-variant-caps)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.font-variant-caps.css
        - include: end-value
        - include: value-css-wide
        - match: '(?x)
            \b
            (?:
              unicase|
              titling-caps|
              small-caps|
              petite-caps|
              normal|
              all-small-caps|
              all-petite-caps
            )
            {{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 3
  property-font-variant-east-asian:
    - match: \b(font-variant-east-asian)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.font-variant-east-asian.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:ruby|normal){{b}}'
          scope: support.constant.property-value.css
        - include: east-asian-width-values
        - include: east-asian-variant-values
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 4
  property-font-variant-emoji:
    - match: \b(font-variant-emoji)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.font-variant-emoji.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:text|emoji|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 3
  property-font-variant-ligatures:
    - match: ({{webkit}}\bfont-variant-ligatures)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.font-variant-ligatures.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:normal|none){{b}}'
          scope: support.constant.property-value.css
        - include: common-lig-values
        - include: discretionary-lig-values
        - include: historical-lig-values
        - include: contextual-alt-values
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 3
  property-font-variant-numeric:
    - match: \b(font-variant-numeric)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.font-variant-numeric.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:slashed-zero|ordinal|normal){{b}}'
          scope: support.constant.property-value.css
        - include: numeric-figure-values
        - include: numeric-spacing-values
        - include: numeric-fraction-values
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 3
  property-font-variant-position:
    - match: \b(font-variant-position)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.font-variant-position.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:super|sub|normal){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Fonts Level 4
  property-font-variation-settings:
    - match: \b(font-variation-settings)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.font-variation-settings.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnormal{{b}}'
          scope: support.constant.property-value.css
        - include: string
        - include: number
    - include: stray-paren-or-semicolon

  # CSS Fonts Module Level 4
  property-font-weight:
    - match: \b(font-weight)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.font-weight.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:normal|lighter|bolder|bold|[1-9]00){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Generated Content for Paged Media Module
  property-footnote-display:
    - match: \b(footnote-display)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.footnote-display.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:inline|compact|block){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Generated Content for Paged Media Module
  property-footnote-policy:
    - match: \b(footnote-policy)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.footnote-policy.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:line|block|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # grid is defined in two specs:
  #     CSS Grid Layout Module Level 1
  #     CSS Template Layout Module
  property-grid:
    - match: \b(grid)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.grid.css
        - include: end-value
        - include: value-css-wide
        - include: string
        - match: '\b(?:subgrid|none|dense|auto-flow){{b}}'
          scope: support.constant.property-value.css
        - include: track-list
        - include: auto-track-list
    - include: stray-paren-or-semicolon

  # CSS Grid Layout Module Level 1
  property-grid-row-column-area:
    - match: '(?x)
        (
          {{ms}}
          \b
          (?:
            grid-row-start|
            grid-row-end|
            grid-row|
            grid-column-start|
            grid-column-end|
            grid-column|
            grid-area
          )
        )\s*
        (:)'
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.grid-row-column-area.css
        - include: end-value
        - include: value-css-wide
        - include: grid-line
    - include: stray-paren-or-semicolon

  # CSS Grid Layout Module Level 1
  property-grid-auto-flow:
    - match: \b(grid-auto-flow)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.grid-auto-flow.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:row|dense|column){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Grid Layout Module Level 1
  property-grid-auto-rows-columns:
    - match: \b(grid-auto-rows|grid-auto-columns)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.grid-auto-rows-columns.css
        - include: end-value
        - include: value-css-wide
        - include: track-size
    - include: stray-paren-or-semicolon

  # grid-template is defined in two specs:
  #     CSS Grid Layout Module Level 1
  #     CSS Template Layout Module
  property-grid-template:
    - match: \b(grid-template)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.grid-template.css
        - include: end-value
        - include: value-css-wide
        - include: string
        - match: '\b(?:subgrid|none){{b}}'
          scope: support.constant.property-value.css
        - include: track-size
        - include: line-names
        - include: fixed-size
    - include: stray-paren-or-semicolon

  # grid-template-areas is defined in two specs:
  #     CSS Grid Layout Module Level 1
  #     CSS Template Layout Module
  property-grid-template-areas:
    - match: \b(grid-template-areas)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.grid-template-areas.css
        - include: end-value
        - include: value-css-wide
        - include: string
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # grid-template-rows and grid-template-columns are defined in two specs:
  #     CSS Grid Layout Module Level 1
  #     CSS Template Layout Module
  property-grid-template-rows-columns:
    - match: \b(grid-template-rows|grid-template-columns)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.grid-template-rows-columns.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:subgrid|none){{b}}'
          scope: support.constant.property-value.css
        - include: track-list
        - include: auto-track-list
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 3
  property-hanging-punctuation:
    - match: \b(hanging-punctuation)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.hanging-punctuation.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:none|last|force-end|first|allow-end){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS basic box model
  property-height:
    - match: \b({{optional_min_max_prefix}}height)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.height.css
        - include: end-value
        - include: value-css-wide
        - include: func-fit-content
        - match: '\b(?:none|min-content|max-content|fit-content|fill|auto){{b}}'
          scope: support.constant.property-value.css
        - include: percentage-non-negative
        - include: length-non-negative
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 4
  property-hyphenate-character:
    - match: \b(hyphenate-character)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.hyphenate-character.css
        - include: end-value
        - include: value-css-wide
        - include: string
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 4
  property-hyphenate-limit-chars:
    - match: ({{ms}}\bhyphenate-limit-chars)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.hyphenate-limit-chars.css
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: integer
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 4
  property-hyphenate-limit-last:
    - match: \b(hyphenate-limit-last)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.hyphenate-limit-last.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:spread|page|none|column|always){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 4
  property-hyphenate-limit-lines:
    - match: ({{ms}}\bhyphenate-limit-lines)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.hyphenate-limit-lines.css
        - include: end-value
        - include: value-css-wide
        - match: '\bno-limit{{b}}'
          scope: support.constant.property-value.css
        - include: integer
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 4
  property-hyphenate-limit-zone:
    - match: ({{ms}}\bhyphenate-limit-zone)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.hyphenate-limit-zone.css
        - include: end-value
        - include: value-css-wide
        - include: percentage
        - include: length
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 3
  property-hyphens:
    - match: ((?:-webkit-|-ms-)?\bhyphens)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.hyphens.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:none|manual|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Image Values and Replaced Content Module Level 3
  property-image-orientation:
    - match: \b(image-orientation)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.image-orientation.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:from-image|flip){{b}}'
          scope: support.constant.property-value.css
        - include: angle
    - include: stray-paren-or-semicolon

  # CSS Image Values and Replaced Content Module Level 3
  property-image-rendering:
    - match: \b(image-rendering)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.image-rendering.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:pixelated|crisp-edges|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Image Values and Replaced Content Module Level 3
  property-image-resolution:
    - match: \b(image-resolution)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.image-resolution.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:snap|from-image){{b}}'
          scope: support.constant.property-value.css
        - include: resolution
    - include: stray-paren-or-semicolon

  # CSS Inline Layout Module Level 3
  property-initial-letter:
    - match: \b(initial-letter)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.initial-letter.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnormal{{b}}'
          scope: support.constant.property-value.css
        - include: integer-positive
        - include: number-non-negative
    - include: stray-paren-or-semicolon

  # CSS Inline Layout Module Level 3
  property-initial-letter-align:
    - match: \b(initial-letter-align)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.initial-letter-align.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:ideographic|hebrew|hanging|border-box|alphabetic){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Inline Layout Module Level 3
  property-initial-letter-wrap:
    - match: \b(initial-letter-wrap)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.initial-letter-wrap.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:none|grid|first|all){{b}}'
          scope: support.constant.property-value.css
        - include: percentage
        - include: length
    - include: stray-paren-or-semicolon

  # CSS Logical Properties and Values Level 1
  property-inset-block-inline:
    - match: \b(inset-inline-start|inset-inline-end|inset-inline|inset-block-start|inset-block-end|inset-block|inset)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.inset-block-inline.css
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: percentage
        - include: length
    - include: stray-paren-or-semicolon

  # Compositing and Blending Level 1
  property-isolation:
    - match: \b(isolation)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.isolation.css
        - include: end-value
        - include: value-css-wide
        - include: isolation-mode
    - include: stray-paren-or-semicolon

  # justify-content is defined in two specs:
  #     CSS Flexible Box Layout Module Level 1
  #     CSS Box Alignment Module Level 3
  property-justify-content:
    - match: \b(justify-content)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.justify-content.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:right|normal|left){{b}}'
          scope: support.constant.property-value.css
        - include: content-distribution
        - include: overflow-position
        - include: content-position
        - include: aspect-ratio
        - include: number
    - include: stray-paren-or-semicolon

  # CSS Box Alignment Module Level 3
  property-justify-items:
    - match: \b(justify-items)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.justify-items.css
        - include: end-value
        - include: value-css-wide
        - include: baseline-position
        - include: overflow-position
        - include: self-position
        - match: '(?x)
            \b
            (?:
              stretch|
              right|
              normal|
              legacy|
              left|
              center
            )
            {{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Box Alignment Module Level 3
  property-justify-self:
    - match: \b(justify-self)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.justify-self.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:stretch|normal|auto){{b}}'
          scope: support.constant.property-value.css
        - include: baseline-position
        - include: overflow-position
        - include: self-position
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 3
  property-letter-spacing:
    - match: \b(letter-spacing)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.letter-spacing.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnormal{{b}}'
          scope: support.constant.property-value.css
        - include: length
    - include: stray-paren-or-semicolon

  # CSS Filter Effects Module Level 1
  property-lighting-color:
    - match: \b(lighting-color)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.lighting-color.css
        - include: end-value
        - include: value-css-wide
        - include: color
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 3
  property-line-break:
    - match: \b(line-break)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.line-break.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:strict|normal|loose|auto|anywhere){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Line Grid Module Level 1
  property-line-grid:
    - match: \b(line-grid)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.line-grid.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:match-parent|create){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS 2.1
  property-line-height:
    - match: \b(line-height)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.line-height.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnormal{{b}}'
          scope: support.constant.property-value.css
        - include: percentage-non-negative
        - include: length-non-negative
        - include: number-non-negative
    - include: stray-paren-or-semicolon

  # CSS Rhythmic Sizing
  property-line-height-step:
    - match: \b(line-height-step)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.line-height-step.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: length-non-negative
    - include: stray-paren-or-semicolon

  # CSS Line Grid Module Level 1
  property-line-snap:
    - match: \b(line-snap)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.line-snap.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:none|contain|baseline){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Lists and Counters Module Level 3
  property-list-style:
    - match: \b(list-style)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.list-style.css
        - include: end-value
        - include: value-css-wide
        - include: func-symbols
        - include: string
        - match: '\b(?:outside|none|inside){{b}}'
          scope: support.constant.property-value.css
        - include: image
        - include: identifier
    - include: stray-paren-or-semicolon

  # CSS Lists and Counters Module Level 3
  property-list-style-image:
    - match: \b(list-style-image)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.list-style-image.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: image
    - include: stray-paren-or-semicolon

  # CSS Lists and Counters Module Level 3
  property-list-style-position:
    - match: \b(list-style-position)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.list-style-position.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:outside|inside){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Lists and Counters Module Level 3
  property-list-style-type:
    - match: \b(list-style-type)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.list-style-type.css
        - include: end-value
        - include: value-css-wide
        - include: func-symbols
        - include: string
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: identifier
    - include: stray-paren-or-semicolon

  # CSS basic box model
  property-margin:
    - match: \b(margin-top|margin-right|margin-left|margin-bottom|margin)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.margin.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:logical|auto){{b}}'
          scope: support.constant.property-value.css
        - include: percentage
        - include: length
    - include: stray-paren-or-semicolon

  # CSS Logical Properties and Values Level 1
  property-margin-block-inline:
    - match: \b(margin-inline-start|margin-inline-end|margin-inline|margin-block-start|margin-block-end|margin-block)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.margin-block-inline.css
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: percentage
        - include: length
    - include: stray-paren-or-semicolon

  # SVG Markers
  property-marker:
    - match: \b(marker)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.marker.css
        - include: end-value
        - include: value-css-wide
        - include: marker-ref
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: percentage
        - include: length
    - include: stray-paren-or-semicolon

  # SVG Markers
  property-marker-knockout:
    - match: \b(marker-knockout-right|marker-knockout-left)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.marker-knockout.css
        - include: end-value
        - include: value-css-wide
        - include: knockout-shape
        - include: knockout-offset
    - include: stray-paren-or-semicolon

  # SVG Markers
  property-marker-pattern:
    - match: \b(marker-pattern)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.marker-pattern.css
        - include: end-value
        - include: value-css-wide
        - include: marker-gap
        - include: marker-ref
    - include: stray-paren-or-semicolon

  # SVG Markers
  property-marker-start-segment-mid-end:
    - match: \b(marker-start|marker-segment|marker-mid|marker-end)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.marker-start-segment-mid-end.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: marker-ref
    - include: stray-paren-or-semicolon

  # CSS Lists and Counters Module Level 3
  property-marker-side:
    - match: \b(marker-side)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.marker-side.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:list-item|list-container){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Paged Media Module Level 3
  property-marks:
    - match: \b(marks)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.marks.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:none|cross|crop){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Masking Module Level 1
  property-mask:
    - match: ({{webkit}}\bmask)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.mask.css
        - include: end-value
        - include: value-css-wide
        - include: mask-layer
    - include: stray-paren-or-semicolon

  # CSS Masking Module Level 1
  property-mask-border:
    - match: ({{webkit}}\bmask-border)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.mask-border.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:stretch|space|round|repeat|luminance|fill|auto|alpha){{b}}'
          scope: support.constant.property-value.css
        - include: image
        - include: percentage-non-negative
        - include: length-non-negative
        - include: number-non-negative
    - include: stray-paren-or-semicolon

  # CSS Masking Module Level 1
  property-mask-border-mode:
    - match: ({{webkit}}\bmask-border-mode)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.mask-border-mode.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:luminance|alpha){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Masking Module Level 1
  property-mask-border-outset:
    - match: ({{webkit}}\bmask-border-outset)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.mask-border-outset.css
        - include: end-value
        - include: value-css-wide
        - include: length-non-negative
        - include: number-non-negative
    - include: stray-paren-or-semicolon

  # CSS Masking Module Level 1
  property-mask-border-repeat:
    - match: ({{webkit}}\bmask-border-repeat)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.mask-border-repeat.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:stretch|space|round|repeat){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Masking Module Level 1
  property-mask-border-slice:
    - match: ({{webkit}}\bmask-border-slice)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.mask-border-slice.css
        - include: end-value
        - include: value-css-wide
        - match: '\bfill{{b}}'
          scope: support.constant.property-value.css
        - include: percentage-non-negative
        - include: number-non-negative
    - include: stray-paren-or-semicolon

  # CSS Masking Module Level 1
  property-mask-border-source:
    - match: ({{webkit}}\bmask-border-source)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.mask-border-source.css
        - include: end-value
        - include: value-css-wide
        - include: image
    - include: stray-paren-or-semicolon

  # CSS Masking Module Level 1
  property-mask-border-width:
    - match: ({{webkit}}\bmask-border-width)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.mask-border-width.css
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: percentage-non-negative
        - include: length-non-negative
        - include: number-non-negative
    - include: stray-paren-or-semicolon

  # CSS Masking Module Level 1
  property-mask-clip:
    - match: ({{webkit}}\bmask-clip)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.mask-clip.css
        - include: end-value
        - include: value-css-wide
        - match: '\bno-clip{{b}}'
          scope: support.constant.property-value.css
        - include: geometry-box
    - include: stray-paren-or-semicolon

  # CSS Masking Module Level 1
  property-mask-composite:
    - match: ({{webkit}}\bmask-composite)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.mask-composite.css
        - include: end-value
        - include: value-css-wide
        - include: compositing-operator
    - include: stray-paren-or-semicolon

  # CSS Masking Module Level 1
  property-mask-image:
    - match: ({{webkit}}\bmask-image)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.mask-image.css
        - include: end-value
        - include: value-css-wide
        - include: mask-reference
    - include: stray-paren-or-semicolon

  # CSS Masking Module Level 1
  property-mask-mode:
    - match: ({{webkit}}\bmask-mode)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.mask-mode.css
        - include: end-value
        - include: value-css-wide
        - include: masking-mode
    - include: stray-paren-or-semicolon

  # CSS Masking Module Level 1
  property-mask-origin:
    - match: ({{webkit}}\bmask-origin)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.mask-origin.css
        - include: end-value
        - include: value-css-wide
        - include: geometry-box
    - include: stray-paren-or-semicolon

  # CSS Masking Module Level 1
  property-mask-position:
    - match: ({{webkit}}\bmask-position)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.mask-position.css
        - include: end-value
        - include: value-css-wide
        - include: position
    - include: stray-paren-or-semicolon

  # CSS Masking Module Level 1
  property-mask-repeat:
    - match: ({{webkit}}\bmask-repeat)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.mask-repeat.css
        - include: end-value
        - include: value-css-wide
        - include: repeat-style
    - include: stray-paren-or-semicolon

  # CSS Masking Module Level 1
  property-mask-size:
    - match: ({{webkit}}\bmask-size)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.mask-size.css
        - include: end-value
        - include: value-css-wide
        - include: bg-size
    - include: stray-paren-or-semicolon

  # CSS Masking Module Level 1
  property-mask-type:
    - match: ({{webkit}}\bmask-type)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.mask-type.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:luminance|alpha){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Overflow Module Level 4
  property-max-lines:
    - match: \b(max-lines)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.max-lines.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: integer-positive
    - include: stray-paren-or-semicolon

  # Compositing and Blending Level 1
  property-mix-blend-mode:
    - match: \b(mix-blend-mode)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.mix-blend-mode.css
        - include: end-value
        - include: value-css-wide
        - include: blend-mode
    - include: stray-paren-or-semicolon

  # Motion Path Module Level 1
  property-motion:
    - match: \b(motion)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.motion.css
        - include: end-value
        - include: value-css-wide
        - include: func-url
        - include: func-path
        - include: basic-shape
        - match: '\b(?:reverse|none|auto){{b}}'
          scope: support.constant.property-value.css
        - include: geometry-box
        - include: angle
        - include: percentage
        - include: length
    - include: stray-paren-or-semicolon

  # Motion Path Module Level 1
  property-motion-offset:
    - match: \b(motion-offset)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.motion-offset.css
        - include: end-value
        - include: value-css-wide
        - include: percentage
        - include: length
    - include: stray-paren-or-semicolon

  # Motion Path Module Level 1
  property-motion-path:
    - match: \b(motion-path)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.motion-path.css
        - include: end-value
        - include: value-css-wide
        - include: func-url
        - include: func-path
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: geometry-box
        - include: basic-shape
    - include: stray-paren-or-semicolon

  # Motion Path Module Level 1
  property-motion-rotation:
    - match: \b(motion-rotation)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.motion-rotation.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:reverse|auto){{b}}'
          scope: support.constant.property-value.css
        - include: angle
    - include: stray-paren-or-semicolon

  # CSS Basic User Interface Module Level 3
  property-nav-up-right-left-down:
    - match: \b(nav-up|nav-right|nav-left|nav-down)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.nav-up-right-left-down.css
        - include: end-value
        - include: value-css-wide
        - include: string
        - match: '\b(?:root|current|auto){{b}}'
          scope: support.constant.property-value.css
        - include: selector-id
    - include: stray-paren-or-semicolon

  # CSS Image Values and Replaced Content Module Level 3
  property-object-fit:
    - match: \b(object-fit)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.object-fit.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:scale-down|none|fill|cover|contain){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Image Values and Replaced Content Module Level 3
  property-object-position:
    - match: \b(object-position)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.object-position.css
        - include: end-value
        - include: value-css-wide
        - include: position
    - include: stray-paren-or-semicolon

  # Motion Path Level 1
  property-offset:
    - match: \b(offset)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.offset.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:reverse|none|auto){{b}}'
          scope: support.constant.property-value.css
        - include: func-path
        - include: func-url
        - include: func-ray
        - include: extent-keyword
        - include: geometry-box
        - include: basic-shape
        - include: position
        - include: angle
        - include: length
        - include: percentage
    - include: stray-paren-or-semicolon

  # CSS Round Display Level 1
  # Motion Path Level 1
  property-offset-anchor:
    - match: \b(offset-anchor)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.offset-anchor.css
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: position
    - include: stray-paren-or-semicolon

  # CSS Round Display Level 1
  # Motion Path Level 1
  property-offset-distance:
    - match: \b(offset-distance)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.offset-distance.css
        - include: end-value
        - include: value-css-wide
        - include: extent-keyword
        - include: percentage
        - include: length
    - include: stray-paren-or-semicolon

  # CSS Round Display Level 1
  # Motion Path Level 1
  property-offset-path:
    - match: \b(offset-path)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.offset-path.css
        - include: end-value
        - include: value-css-wide
        - include: func-url
        - include: func-path
        - include: func-ray
        - include: basic-shape
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: geometry-box
    - include: stray-paren-or-semicolon

  # CSS Round Display Level 1
  # Motion Path Level 1
  property-offset-position:
    - match: \b(offset-position)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.offset-position.css
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: position
    - include: stray-paren-or-semicolon

  # CSS Round Display Level 1
  # Motion Path Module Level 1
  property-offset-rotate:
    - match: \b(offset-rotate)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.offset-rotate.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:reverse|auto){{b}}'
          scope: support.constant.property-value.css
        - include: angle
    - include: stray-paren-or-semicolon

  # CSS Positioned Layout Module Level 3
  property-offset-start-end-before-after:
    - match: \b(offset-start|offset-end|offset-before|offset-after)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.offset-start-end-before-after.css
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: percentage
        - include: length
    - include: stray-paren-or-semicolon

  # CSS Color Module Level 3
  property-opacity:
    - match: \b(opacity)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.opacity.css
        - include: end-value
        - include: value-css-wide
        - include: number-zero-to-one
    - include: stray-paren-or-semicolon

  # CSS Flexible Box Layout Module Level 1
  property-order:
    - match: \b(order)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.order.css
        - include: end-value
        - include: value-css-wide
        - include: integer
    - include: stray-paren-or-semicolon

  # CSS Basic User Interface Module Level 3
  property-outline:
    - match: \b(outline)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.outline.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:invert|auto){{b}}'
          scope: support.constant.property-value.css
        - include: border-width
        - include: border-style
        - include: color
    - include: stray-paren-or-semicolon

  # CSS Basic User Interface Module Level 3
  property-outline-color:
    - match: \b(outline-color)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.outline-color.css
        - include: end-value
        - include: value-css-wide
        - match: '\binvert{{b}}'
          scope: support.constant.property-value.css
        - include: color
    - include: stray-paren-or-semicolon

  # CSS Basic User Interface Module Level 3
  property-outline-offset:
    - match: \b(outline-offset)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.outline-offset.css
        - include: end-value
        - include: value-css-wide
        - include: length
    - include: stray-paren-or-semicolon

  # CSS Basic User Interface Module Level 3
  property-outline-style:
    - match: \b(outline-style)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.outline-style.css
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: border-style
    - include: stray-paren-or-semicolon

  # CSS Basic User Interface Module Level 3
  property-outline-width:
    - match: \b(outline-width)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.outline-width.css
        - include: end-value
        - include: value-css-wide
        - include: border-width
    - include: stray-paren-or-semicolon

  # CSS Overflow Module Level 4
  property-overflow:
    - match: \b(overflow)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.overflow.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:visible|scroll|hidden|clip|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 3
  property-overflow-wrap:
    - match: \b(overflow-wrap)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.overflow-wrap.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:normal|break-word|break-spaces){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Overflow Module Level 4
  property-overflow-x-y:
    - match: \b(overflow-x|overflow-y)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.overflow-x-y.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:visible|scroll|hidden|clip|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS basic box model
  property-padding:
    - match: \b(padding-top|padding-right|padding-left|padding-bottom|padding)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.padding.css
        - include: end-value
        - include: value-css-wide
        - match: \blogical{{b}}
          scope: support.constant.property-value.css
        - include: percentage-non-negative
        - include: length-non-negative
    - include: stray-paren-or-semicolon

  # CSS Logical Properties and Values Level 1
  property-padding-block-inline:
    - match: \b(padding-inline-start|padding-inline-end|padding-inline|padding-block-start|padding-block-end|padding-block)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.padding-block-inline.css
        - include: end-value
        - include: value-css-wide
        - include: percentage-non-negative
        - include: length-non-negative
    - include: stray-paren-or-semicolon

  # CSS Paged Media Module Level 3
  property-page:
    - match: \b(page)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.page.css
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: identifier
    - include: stray-paren-or-semicolon

  # CSS 2.1
  property-page-break-before-after:
    - match: \b(page-break-before|page-break-after)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.page-break-before-after.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:verso|right|recto|left|avoid|auto|always){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS 2.1
  property-page-break-inside:
    - match: \b(page-break-inside)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.page-break-inside.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:avoid|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # SVG 2
  property-paint-order:
    - match: \b(paint-order)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.paint-order.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:stroke|normal|markers|fill){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Speech Module
  property-pause:
    - match: \b(pause-before|pause-after|pause)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.pause.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:x-weak|x-strong|weak|strong|none|medium){{b}}'
          scope: support.constant.property-value.css
        - include: time
    - include: stray-paren-or-semicolon

  # CSS Transforms Module Level 1
  property-perspective:
    - match: ({{webkit}}\bperspective)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.perspective.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: length-positive
    - include: stray-paren-or-semicolon

  # CSS Transforms Module Level 1
  property-perspective-origin:
    - match: ({{webkit}}\bperspective-origin)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.perspective-origin.css
        - include: end-value
        - include: value-css-wide
        - include: position
    - include: stray-paren-or-semicolon

  # CSS Box Alignment Module Level 3
  property-place-content:
    - match: \b(place-content)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.place-content.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:right|normal|left){{b}}'
          scope: support.constant.property-value.css
        - include: baseline-position
        - include: content-distribution
        - include: content-position
        - include: overflow-position
    - include: stray-paren-or-semicolon

  # CSS Box Alignment Module Level 3
  property-place-items:
    - match: \b(place-items)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.place-items.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:stretch|right|normal|legacy|left|center){{b}}'
          scope: support.constant.property-value.css
        - include: baseline-position
        - include: overflow-position
        - include: self-position
    - include: stray-paren-or-semicolon

  # CSS Box Alignment Module Level 3
  property-place-self:
    - match: \b(place-self)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.place-self.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:stretch|normal|auto){{b}}'
          scope: support.constant.property-value.css
        - include: baseline-position
        - include: overflow-position
        - include: self-position
    - include: stray-paren-or-semicolon

  # SVG 2
  property-pointer-events:
    - match: \b(pointer-events)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.pointer-events.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:visibleStroke|visiblePainted|visibleFill|visible|stroke|painted|none|fill|bounding-box|all){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Round Display Level 1
  property-polar-anchor:
    - match: \b(polar-anchor)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.polar-anchor.css
        - include: end-value
        - include: value-css-wide
        - include: position
    - include: stray-paren-or-semicolon

  # CSS Round Display Level 1
  property-polar-angle:
    - match: \b(polar-angle)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.polar-angle.css
        - include: end-value
        - include: value-css-wide
        - include: angle
    - include: stray-paren-or-semicolon

  # CSS Round Display Level 1
  property-polar-distance:
    - match: \b(polar-distance)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.polar-distance.css
        - include: end-value
        - include: value-css-wide
        - match: '\bcontain{{b}}'
          scope: support.constant.property-value.css
        - include: extent-keyword
        - include: percentage
        - include: length
    - include: stray-paren-or-semicolon

  # CSS Round Display Level 1
  property-polar-origin:
    - match: \b(polar-origin)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.polar-origin.css
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: position
    - include: stray-paren-or-semicolon

  # CSS Positioned Layout Module Level 3
  property-position:
    - match: \b(position)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.position.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:sticky|static|relative|fixed|absolute){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Presentation Levels Module
  property-presentation-level:
    - match: \b(presentation-level)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.presentation-level.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:same|increment){{b}}'
          scope: support.constant.property-value.css
        - include: integer
    - include: stray-paren-or-semicolon

  # CSS Generated Content Module Level 3
  property-quotes:
    - match: \b(quotes)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.quotes.css
        - include: end-value
        - include: value-css-wide
        - include: string
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Regions Module Level 1
  property-region-fragment:
    - match: \b(region-fragment)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.region-fragment.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:break|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Basic User Interface Module Level 3
  # CSS Logical Properties and Values Level 1
  property-resize:
    - match: \b(resize)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.resize.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:vertical|none|inline|horizontal|both|block){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Speech Module
  property-rest:
    - match: \b(rest-before|rest-after|rest)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.rest.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:x-weak|x-strong|weak|strong|none|medium){{b}}'
          scope: support.constant.property-value.css
        - include: time
    - include: stray-paren-or-semicolon

  # CSS basic box model
  property-rotation:
    - match: \b(rotation)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.rotation.css
        - include: end-value
        - include: value-css-wide
        - include: angle
    - include: stray-paren-or-semicolon

  # CSS basic box model
  property-rotation-point:
    - match: \b(rotation-point)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.rotation-point.css
        - include: end-value
        - include: value-css-wide
        - include: position
    - include: stray-paren-or-semicolon

  # CSS Box Alignment Level 3
  property-row-column-gap:
    - match: \b(row-gap|gap|column-gap)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.row-column-gap.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnormal{{b}}'
          scope: support.constant.property-value.css
        - include: percentage-non-negative
        - include: length-non-negative
    - include: stray-paren-or-semicolon

  # CSS Ruby Layout Module Level 1
  property-ruby-align:
    - match: \b(ruby-align)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.ruby-align.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:start|space-between|space-around|center){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Ruby Layout Module Level 1
  property-ruby-merge:
    - match: \b(ruby-merge)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.ruby-merge.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:separate|collapse|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Ruby Layout Module Level 1
  property-ruby-position:
    - match: \b(ruby-position)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.ruby-position.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:under|over|inter-character){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Generated Content for Paged Media Module
  property-running:
    - match: \b(running)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.running.css
        - include: end-value
        - include: value-css-wide
        - include: identifier
    - include: stray-paren-or-semicolon

  # CSSOM View Module
  property-scroll-behavior:
    - match: \b(scroll-behavior)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.scroll-behavior.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:smooth|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Scroll Snap Module Level 1
  property-scroll-margin:
    - match: '(?x)
        \b
        (
          scroll-margin-top|
          scroll-margin-right|
          scroll-margin-left|
          scroll-margin-inline-start|
          scroll-margin-inline-end|
          scroll-margin-inline|
          scroll-margin-bottom|
          scroll-margin-block-start|
          scroll-margin-block-end|
          scroll-margin-block|
          scroll-margin
        )
        \s*(:)'
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.scroll-margin.css
        - include: end-value
        - include: value-css-wide
        - include: length
    - include: stray-paren-or-semicolon

  # CSS Scroll Snap Module Level 1
  property-scroll-padding:
    - match: '(?x)
        \b
        (
          scroll-padding-top|
          scroll-padding-right|
          scroll-padding-left|
          scroll-padding-inline-start|
          scroll-padding-inline-end|
          scroll-padding-inline|
          scroll-padding-bottom|
          scroll-padding-block-start|
          scroll-padding-block-end|
          scroll-padding-block|
          scroll-padding
        )
        \s*(:)'
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.scroll-padding.css
        - include: end-value
        - include: value-css-wide
        - include: percentage-non-negative
        - include: length-non-negative
    - include: stray-paren-or-semicolon

  # CSS Scroll Snap Module Level 1
  property-scroll-snap-align:
    - match: \b(scroll-snap-align)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.scroll-snap-align.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:start|none|end|center){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Scroll Snap Module Level 1
  property-scroll-snap-stop:
    - match: \b(scroll-snap-stop)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.scroll-snap-stop.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:normal|always){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Scroll Snap Module Level 1
  property-scroll-snap-type:
    - match: ({{ms}}\bscroll-snap-type)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.scroll-snap-type.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:y|x|proximity|none|mandatory|inline|both|block){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Shapes Module Level 1
  property-shape-image-threshold:
    - match: \b(shape-image-threshold)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.shape-image-threshold.css
        - include: end-value
        - include: value-css-wide
        - include: number-zero-to-one
    - include: stray-paren-or-semicolon

  # CSS Round Display Level 1
  property-shape-inside:
    - match: \b(shape-inside)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.shape-inside.css
        - include: end-value
        - include: value-css-wide
        - include: basic-shape
        - include: image
        - match: '\b(?:shape-box|outside-shape|display|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Shapes Module Level 1
  property-shape-margin:
    - match: \b(shape-margin)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.shape-margin.css
        - include: end-value
        - include: value-css-wide
        - include: percentage
        - include: length
    - include: stray-paren-or-semicolon

  # CSS Shapes Module Level 1
  property-shape-outside:
    - match: \b(shape-outside)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.shape-outside.css
        - include: end-value
        - include: value-css-wide
        - include: basic-shape
        - include: image
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: shape-box
    - include: stray-paren-or-semicolon

  # SVG 2
  property-shape-rendering:
    - match: \b(shape-rendering)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.shape-rendering.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:optimizeSpeed|geometricPrecision|crispEdges|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Paged Media Module Level 3
  property-size:
    - match: \b(size)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.size.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:portrait|landscape|auto){{b}}'
          scope: support.constant.property-value.css
        - include: page-size
        - include: length-non-negative
    - include: stray-paren-or-semicolon

  # CSS Speech Module
  property-speak:
    - match: \b(speak)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.speak.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:never|auto|always){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Speech Module
  property-speak-as:
    - match: \b(speak-as)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.speak-as.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:spell-out|normal|no-punctuation|literal-punctuation|digits){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # SVG 2
  property-stop-color:
    - match: \b(stop-color)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.stop-color.css
        - include: end-value
        - include: value-css-wide
        - include: color
    - include: stray-paren-or-semicolon

  # SVG 2
  property-stop-opacity:
    - match: \b(stop-opacity)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.stop-opacity.css
        - include: end-value
        - include: value-css-wide
        - include: number-zero-to-one
    - include: stray-paren-or-semicolon

  # string-set is defined in two specs:
  #     CSS Generated Content for Paged Media Module
  #     CSS Generated Content Module Level 3
  property-string-set:
    - match: \b(string-set)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.string-set.css
        - include: end-value
        - include: value-css-wide
        - include: func-attr
        - include: func-content
        - include: func-url
        # FIXME: spec does not list string-set values accurately
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: content-list
        - include: identifier
    - include: stray-paren-or-semicolon

  # SVG Strokes
  property-stroke:
    - match: \b(stroke)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.stroke.css
        - include: end-value
        - include: value-css-wide
        - include: bg-image
        - include: bg-size
        - include: repeat-style
        - include: box
        - include: attachment
        - include: color
        - include: position
        - match: '\/'
          scope: keyword.operator.arithmetic.css
    - include: stray-paren-or-semicolon

  # CSS Fill and Stroke Module Level 3
  property-stroke-align:
    - match: \b(stroke-align)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.stroke-align.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:outer|inner|center){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # SVG Strokes
  property-stroke-alignment:
    - match: \b(stroke-alignment)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.stroke-alignment.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:outer|inner|center){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Fill and Stroke Module Level 3
  property-stroke-break:
    - match: \b(stroke-break)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.stroke-break.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:slice|clone|bounding-box){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Fill and Stroke Module Level 3
  property-stroke-color:
    - match: \b(stroke-color)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.stroke-color.css
        - include: end-value
        - include: value-css-wide
        - include: color
    - include: stray-paren-or-semicolon

  # SVG Strokes
  property-stroke-dashadjust:
    - match: \b(stroke-dashadjust)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.stroke-dashadjust.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:stretch|none|gaps|dashes|compress){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # SVG Strokes
  # CSS Fill and Stroke Module Level 3
  property-stroke-dasharray:
    - match: \b(stroke-dasharray)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.stroke-dasharray.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: dasharray
    - include: stray-paren-or-semicolon

  # SVG Strokes
  property-stroke-dashcorner:
    - match: \b(stroke-dashcorner)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.stroke-dashcorner.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: length
    - include: stray-paren-or-semicolon

  # CSS Fill and Stroke Module Level 3
  property-stroke-dash-corner:
    - match: \b(stroke-dash-corner)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.stroke-dash-corner.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: length
    - include: stray-paren-or-semicolon

  # CSS Fill and Stroke Module Level 3
  property-stroke-dash-justify:
    - match: \b(stroke-dash-justify)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.stroke-dash-justify.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:stretch|none|gaps|dashes|compress){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # SVG Strokes
  property-stroke-dashoffset:
    - match: \b(stroke-dashoffset)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.stroke-dashoffset.css
        - include: end-value
        - include: value-css-wide
        - include: percentage
        - include: length
    - include: stray-paren-or-semicolon

  # CSS Fill and Stroke Module Level 3
  property-stroke-image:
    - match: \b(stroke-image)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.stroke-image.css
        - include: end-value
        - include: value-css-wide
        - include: paint
    - include: stray-paren-or-semicolon

  # SVG Strokes
  property-stroke-linecap:
    - match: \b(stroke-linecap)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.stroke-linecap.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:square|round|butt){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # SVG Strokes
  # CSS Fill and Stroke Module Level 3
  property-stroke-linejoin:
    - match: \b(stroke-linejoin)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.stroke-linejoin.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:stupid|round|miter-clip|miter|fallback|crop|bevel|arcs){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # SVG Strokes
  property-stroke-miterlimit:
    - match: \b(stroke-miterlimit)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.stroke-miterlimit.css
        - include: end-value
        - include: value-css-wide
        # Technically, this is supposed to be a number greater than or equal to
        # 1. number-positive is close enough.
        - include: number-positive
    - include: stray-paren-or-semicolon

  # SVG Strokes
  property-stroke-opacity:
    - match: \b(stroke-opacity)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.stroke-opacity.css
        - include: end-value
        - include: value-css-wide
        - include: number-zero-to-one
    - include: stray-paren-or-semicolon

  # CSS Fill and Stroke Module Level 3
  property-stroke-origin:
    - match: \b(stroke-origin)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.stroke-origin.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:stroke-box|padding-box|match-parent|fill-box|content-box|border-box){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Fill and Stroke Module Level 3
  property-stroke-position:
    - match: \b(stroke-position)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.stroke-position.css
        - include: end-value
        - include: value-css-wide
        - include: position
    - include: stray-paren-or-semicolon

  # CSS Fill and Stroke Module Level 3
  property-stroke-repeat:
    - match: \b(stroke-repeat)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.stroke-repeat.css
        - include: end-value
        - include: value-css-wide
        - include: repeat-style
    - include: stray-paren-or-semicolon

  # SVG Strokes
  property-stroke-width:
    - match: \b(stroke-width)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.stroke-width.css
        - include: end-value
        - include: value-css-wide
        - include: percentage-non-negative
        - include: length-non-negative
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 3
  property-tab-size:
    - match: ({{moz}}\btab-size)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.tab-size.css
        - include: end-value
        - include: value-css-wide
        - include: length-non-negative
        - include: number-non-negative
    - include: stray-paren-or-semicolon

  # CSS 2.1
  property-table-layout:
    - match: \b(table-layout)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.table-layout.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:fixed|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 3
  property-text-align:
    - match: \b(text-align)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.text-align.css
        - include: end-value
        - include: value-css-wide
        - match: '(?x)
            \b
            (?:
              start|
              right|
              match-parent|
              left|
              justify-all|
              justify|
              end|
              center
            )
            {{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 3
  property-text-align-all:
    - match: \b(text-align-all)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.text-align-all.css
        - include: end-value
        - include: value-css-wide
        - match: '(?x)
            \b
            (?:
              start|
              right|
              match-parent|
              left|
              justify|
              end|
              center
            )
            {{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 3
  property-text-align-last:
    - match: ((?:-moz-|-ms-)?\btext-align-last)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.text-align-last.css
        - include: end-value
        - include: value-css-wide
        - match: '(?x)
            \b
            (?:
              start|
              right|
              left|
              justify|
              end|
              center|
              auto
            )
            {{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # SVG 2
  property-text-anchor:
    - match: \b(text-anchor)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.text-anchor.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:start|middle|end){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Writing Modes Level 3
  property-text-combine-upright:
    - match: \b(text-combine-upright)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.text-combine-upright.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:none|digits|all){{b}}'
          scope: support.constant.property-value.css
        # Technically, this should be an integer in the range 2-4.
        - include: integer-positive
    - include: stray-paren-or-semicolon

  # CSS Text Decoration Module Level 3
  property-text-decoration:
    - match: \b(text-decoration)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.text-decoration.css
        - include: end-value
        - include: value-css-wide
        - match: '(?x)
            \b
            (?:
              wavy|
              underline|
              solid|
              overline|
              none|
              line-through|
              double|
              dotted|
              dashed|
              blink
            )
            {{b}}'
          scope: support.constant.property-value.css
        - include: color
    - include: stray-paren-or-semicolon

  # CSS Text Decoration Module Level 3
  property-text-decoration-color:
    - match: \b(text-decoration-color)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.text-decoration-color.css
        - include: end-value
        - include: value-css-wide
        - include: color
    - include: stray-paren-or-semicolon

  # CSS Text Decoration Module Level 3
  property-text-decoration-line:
    - match: \b(text-decoration-line)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.text-decoration-line.css
        - include: end-value
        - include: value-css-wide
        - match: '(?x)
            \b
            (?:
              underline|
              overline|
              none|
              line-through|
              blink
            )
            {{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Text Decoration Module Level 4
  property-text-decoration-skip:
    - match: \b(text-decoration-skip)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.text-decoration-skip.css
        - include: end-value
        - include: value-css-wide
        - match: '(?x)
            \b
            (?:
              trailing-spaces|
              spaces|
              objects|
              none|
              leading-spaces|
              edges|
              box-decoration
            )
            {{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Text Decoration Module Level 4
  property-text-decoration-skip-ink:
    - match: \b(text-decoration-skip-ink)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.text-decoration-skip-ink.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:none|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Text Decoration Module Level 3
  property-text-decoration-style:
    - match: \b(text-decoration-style)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.text-decoration-style.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:wavy|solid|double|dotted|dashed){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Text Decoration Module Level 3
  property-text-emphasis:
    - match: ({{webkit}}\btext-emphasis)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.text-emphasis.css
        - include: end-value
        - include: value-css-wide
        - include: string
        - include: color
        - match: '(?x)
            \b
            (?:
              triangle|
              sesame|
              open|
              none|
              filled|
              double-circle|
              dot|
              circle
            )
            {{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Text Decoration Module Level 3
  property-text-emphasis-color:
    - match: ({{webkit}}\btext-emphasis-color)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.text-emphasis-color.css
        - include: end-value
        - include: value-css-wide
        - include: color
    - include: stray-paren-or-semicolon

  # CSS Text Decoration Module Level 3
  property-text-emphasis-position:
    - match: ({{webkit}}\btext-emphasis-position)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.text-emphasis-position.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:under|right|over|left){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Text Decoration Module Level 4
  property-text-emphasis-skip:
    - match: \b(text-emphasis-skip)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.text-emphasis-skip.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:symbols|spaces|punctuation|narrow){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Text Decoration Module Level 3
  property-text-emphasis-style:
    - match: ({{webkit}}\btext-emphasis-style)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.text-emphasis-style.css
        - include: end-value
        - include: value-css-wide
        - include: string
        - match: '(?x)
            \b
            (?:
              triangle|
              sesame|
              open|
              none|
              filled|
              double-circle|
              dot|
              circle
            )
            {{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Text Decoration Module Level 4
  property-text-decoration-width:
    - match: \b(text-decoration-width)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.text-decoration-width.css
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: length
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 3
  property-text-indent:
    - match: \b(text-indent)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.text-indent.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:hanging|each-line){{b}}'
          scope: support.constant.property-value.css
        - include: percentage
        - include: length
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 3
  property-text-justify:
    - match: ({{ms}}\btext-justify)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.text-justify.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:none|inter-word|inter-character|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Writing Modes Level 3
  property-text-orientation:
    - match: \b(text-orientation)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.text-orientation.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:upright|sideways|mixed){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Basic User Interface Module Level 3
  property-text-overflow:
    - match: \b(text-overflow)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.text-overflow.css
        - include: end-value
        - include: value-css-wide
        - include: func-fade
        - include: string
        - match: '\b(?:ellipsis|fade|clip){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # SVG 2
  property-text-rendering:
    - match: \b(text-rendering)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.text-rendering.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:optimizeSpeed|optimizeLegibility|geometricPrecision|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Text Decoration Module Level 3
  property-text-shadow:
    - match: \b(text-shadow)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.text-shadow.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: color
        - include: length
    - include: stray-paren-or-semicolon

  # CSS Mobile Text Size Adjustment Module Level 1
  property-text-size-adjust:
    - match: ({{vendor_prefix}}\btext-size-adjust)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.text-size-adjust.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:none|auto){{b}}'
          scope: support.constant.property-value.css
        - include: percentage
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 4
  property-text-space-collapse:
    - match: \b(text-space-collapse)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.text-space-collapse.css
        - include: end-value
        - include: value-css-wide
        - match: '(?x)
            \b
            (?:
              preserve-trim|
              preserve-spaces|
              preserve-breaks|
              preserve-auto|
              preserve|
              discard|
              collapse
            )
            {{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 4
  property-text-space-trim:
    - match: \b(text-space-trim)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.text-space-trim.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:trim-inner|none|discard-before|discard-after){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 4
  property-text-spacing:
    - match: \b(text-spacing)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.text-spacing.css
        - include: end-value
        - include: value-css-wide
        - match: '(?x)
            \b
            (?:
              trim-start|
              trim-end|
              trim-adjacent|
              space-start|
              space-end|
              space-adjacent|
              punctuation|
              normal|
              none|
              no-compress|
              ideograph-numeric|
              ideograph-alpha|
              allow-end
            )
            {{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 3
  property-text-transform:
    - match: \b(text-transform)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.text-transform.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:uppercase|none|lowercase|full-width|capitalize){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Text Decoration Module Level 4
  property-text-underline-offset:
    - match: \b(text-underline-offset)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.text-underline-offset.css
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: length
    - include: stray-paren-or-semicolon

  # CSS Text Decoration Module Level 3
  property-text-underline-position:
    - match: ({{ms}}\btext-underline-position)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.text-underline-position.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:under|right|left|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 4
  property-text-wrap:
    - match: \b(text-wrap)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.text-wrap.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:nowrap|normal|balance){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Positioned Layout Module Level 3
  property-top-right-left-bottom:
    - match: \b(top|right|left|bottom)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.top-right-left-bottom.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:inline-start|inline-end|block-start|block-end|auto){{b}}'
          scope: support.constant.property-value.css
        - include: percentage
        - include: length
    - include: stray-paren-or-semicolon

  # CSS Transforms Module Level 1
  property-transform:
    - match: \b(transform)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.transform.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnone{{b}}'
          scope: support.constant.property-value.css
        - include: transform-list
    - include: stray-paren-or-semicolon

  # CSS Transforms Module Level 1
  property-transform-box:
    - match: \b(transform-box)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.transform-box.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:view-box|fill-box|border-box){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Transforms Module Level 1
  property-transform-origin:
    - match: \b(transform-origin)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.transform-origin.css
        - include: end-value
        - include: value-css-wide
        - include: position
    - include: stray-paren-or-semicolon

  # CSS Transforms Module Level 1
  property-transform-style:
    - match: \b(transform-style)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.transform-style.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:preserve-3d|flat|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Transitions
  property-transition:
    - match: \b(transition)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.transition.css
        - include: end-value
        - include: value-css-wide
        - include: single-transition
    - include: stray-paren-or-semicolon

  # CSS Transitions
  property-transition-delay:
    - match: \b(transition-delay)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.transition-delay.css
        - include: end-value
        - include: value-css-wide
        - include: time
    - include: stray-paren-or-semicolon

  # CSS Transitions
  property-transition-duration:
    - match: \b(transition-duration)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.transition-duration.css
        - include: end-value
        - include: value-css-wide
        - include: time
    - include: stray-paren-or-semicolon

  # CSS Transitions
  property-transition-property:
    - match: \b(transition-property)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.transition-property.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:none|all){{b}}'
          scope: support.constant.property-value.css
        - include: identifier
    - include: stray-paren-or-semicolon

  # CSS Transitions
  property-transition-timing-function:
    - match: \b(transition-timing-function)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.transition-timing-function.css
        - include: end-value
        - include: value-css-wide
        - include: single-timing-function
    - include: stray-paren-or-semicolon

  # CSS Writing Modes Level 3
  property-unicode-bidi:
    - match: \b(unicode-bidi)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.unicode-bidi.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:plaintext|normal|isolate-override|isolate|embed|bidi-override){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Basic User Interface Module Level 4
  property-user-select:
    - match: ({{vendor_prefix}}\buser-select)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.user-select.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:text|none|contain|auto|all){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # SVG 2
  property-vector-effect:
    - match: \b(vector-effect)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.vector-effect.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:none|non-scaling-stroke){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Inline Layout Module Level 3
  property-vertical-align:
    - match: \b(vertical-align)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.vertical-align.css
        - include: end-value
        - include: value-css-wide
        - match: '(?x)
            \b
            (?:
              top|
              text-top|
              text-bottom|
              middle|
              mathematical|
              ideographic|
              central|
              center|
              bottom|
              baseline|
              alphabetic
            )
            {{b}}'
          scope: support.constant.property-value.css
        - include: baseline-shift
    - include: stray-paren-or-semicolon

  # CSS basic box model
  property-visibility:
    - match: \b(visibility)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.visibility.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:visible|hidden|collapse){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Speech Module
  property-voice-balance:
    - match: \b(voice-balance)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.voice-balance.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:rightwards|right|leftwards|left|center){{b}}'
          scope: support.constant.property-value.css
        - include: number
    - include: stray-paren-or-semicolon

  # CSS Speech Module
  property-voice-duration:
    - match: \b(voice-duration)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.voice-duration.css
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: time
    - include: stray-paren-or-semicolon

  # CSS Speech Module
  property-voice-family:
    - match: \b(voice-family)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.voice-family.css
        - include: end-value
        - include: value-css-wide
        - match: '\bpreserve{{b}}'
          scope: support.constant.property-value.css
        - include: generic-voice
        - include: voice-name
    - include: stray-paren-or-semicolon

  # CSS Speech Module
  property-voice-range-pitch:
    - match: \b(voice-range|voice-pitch)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.voice-range-pitch.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:x-low|x-high|medium|low|high|absolute){{b}}'
          scope: support.constant.property-value.css
        - include: frequency
        - include: semitones
        - include: percentage
    - include: stray-paren-or-semicolon

  # CSS Speech Module
  property-voice-rate:
    - match: \b(voice-rate)\s*(:)
      captures:
        1: support.constant.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.voice-rate.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:x-slow|x-fast|slow|normal|medium|fast){{b}}'
          scope: support.constant.property-value.css
        - include: percentage-non-negative
    - include: stray-paren-or-semicolon

  # CSS Speech Module
  property-voice-stress:
    - match: \b(voice-stress)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.voice-stress.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:strong|reduced|normal|none|moderate){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Speech Module
  property-voice-volume:
    - match: \b(voice-volume)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.voice-volume.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:x-soft|x-loud|soft|silent|medium|loud){{b}}'
          scope: support.constant.property-value.css
        - include: decibel
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 4
  property-white-space:
    - match: \b(white-space)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.white-space.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:pre-wrap-auto|pre-wrap|pre-line|pre|nowrap|normal){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Fragmentation Module Level 3
  property-widows-orphans:
    - match: \b(widows|orphans)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.widows-orphans.css
        - include: end-value
        - include: value-css-wide
        - include: integer-positive
    - include: stray-paren-or-semicolon

  # CSS basic box model
  property-width:
    - match: \b({{optional_min_max_prefix}}width)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.width.css
        - include: end-value
        - include: value-css-wide
        - include: func-fit-content
        - match: '\b(?:none|min-content|max-content|fit-content|fill|auto){{b}}'
          scope: support.constant.property-value.css
        - include: percentage-non-negative
        - include: length-non-negative
    - include: stray-paren-or-semicolon

  # CSS Will Change Module Level 1
  property-will-change:
    - match: \b(will-change)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.will-change.css
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: animateable-feature
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 3
  property-word-break:
    - match: \b(word-break)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.word-break.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:normal|keep-all|break-word|break-all){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 3
  property-word-spacing:
    - match: \b(word-spacing)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.word-spacing.css
        - include: end-value
        - include: value-css-wide
        - match: '\bnormal{{b}}'
          scope: support.constant.property-value.css
        - include: percentage
        - include: length
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 3
  # This is identical to overflow-wrap.
  property-word-wrap:
    - match: ({{ms}}\bword-wrap)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.word-wrap.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:normal|break-word|break-spaces){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 4
  property-wrap-before-after:
    - match: \b(wrap-before|wrap-after)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.wrap-before-after.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:line|flex|avoid-line|avoid-flex|avoid|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Exclusions Module Level 1
  property-wrap-flow:
    - match: ({{ms}}\bwrap-flow)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.wrap-flow.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:start|minimum|maximum|end|clear|both|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Text Module Level 4
  property-wrap-inside:
    - match: \b(wrap-inside)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.wrap-inside.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:avoid|auto){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Exclusions Module Level 1
  property-wrap-through:
    - match: ({{ms}}\bwrap-through)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.wrap-through.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:wrap|none){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Writing Modes Level 3
  property-writing-mode:
    - match: ((?:-webkit-|-ms-)?\bwriting-mode)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.writing-mode.css
        - include: end-value
        - include: value-css-wide
        - match: '\b(?:vertical-rl|vertical-lr|sideways-rl|sideways-lr|horizontal-tb){{b}}'
          scope: support.constant.property-value.css
    - include: stray-paren-or-semicolon

  # CSS Positioned Layout Module Level 3
  property-z-index:
    - match: \b(z-index)\s*(:)
      captures:
        1: support.type.property-name.css
        2: punctuation.separator.key-value.css
      push:
        - meta_content_scope: meta.property-value.z-index.css
        - include: end-value
        - include: value-css-wide
        - match: '\bauto{{b}}'
          scope: support.constant.property-value.css
        - include: integer
    - include: stray-paren-or-semicolon

  prototype:
    - include: comment

  quote:
    - match: '(?x)
        \b
        (?:
          open-quote|
          no-open-quote|
          no-close-quote|
          close-quote
        )
        {{b}}'
      scope: support.constant.property-value.css

  ratio:
    - match: '{{ratio}}'
      captures:
        1: constant.numeric.css
        2: keyword.operator.arithmetic.css
        3: constant.numeric.css

  repeat-style:
    - match: '(?x)
        \b
        (?:
          space|
          round|
          repeat-y|
          repeat-x|
          repeat|
          no-repeat
        )
        {{b}}'
      scope: support.constant.property-value.css

  resolution:
    - include: func-calc
    - match: '({{number_non_neg}})({{resolution_unit}})'
      captures:
        1: constant.numeric.css
        2: keyword.other.unit.css

  # <rgb-component> is a superset of <alpha-value> and will match it too.
  # <alpha-value> is limited to the range 0-100% or 0.0-1.0.
  # <rgb-component> matches the range 0-100% or 0.0 - 255.0.
  # Since <alpha-value> is used along with <rgb-component>, there's no point
  # creating a separate context.
  rgb-component:
    - include: percentage-zero-to-100
    - include: number-zero-to-255

  # A rule is a selector and a declaration list.
  # selector {
  #     property1: value1;
  #     property2: value2;
  # }
  rule:
    - match: '(?=[\w.:#\[*-&]|@nest)'
      push:
        - meta_scope: meta.rule.css
        - match: '}'
          scope: punctuation.section.declaration-list.end.css
          pop: true
        - include: declaration-list
        - include: selector
    - include: stray-brace

  # Match style="" in an HTML tag. This is referenced inside the default HTML
  # package, not anywhere in this syntax definition. The push and pop matches
  # are taken from the default CSS package for compatibility.
  #   https://github.com/sublimehq/Packages/blob/master/CSS/CSS.sublime-syntax#L610
  rule-list-body:
    - match: '(?=[-a-z])'
      push:
        - meta_scope: meta.declaration-list.css
        - match: $|(?![-a-z])
          pop: true

  selector:
    # This match applies a single meta.selector.css scope to a comma-separated
    # list of selectors, so that they appear as one entry in the Symbol List.
    - match: '(?=[\w.:#\[*-&]|@nest)'
      push:
        - meta_content_scope: meta.selector.css
        - match: '(?={)'
          pop: true
        - include: selector-list

  selector-list:
    - include: selector-nesting
    - include: selector-custom
    - include: selector-simple-compound
    - include: selector-combinator

  selector-attribute:
    - match: '\['
      scope: punctuation.section.attribute-selector.begin.css
      push:
        - meta_content_scope: meta.attribute-selector.css
        - match: '\]'
          scope: punctuation.section.attribute-selector.end.css
          pop: true
        # It's difficult to match attribute names and values separately when
        # the values are unquoted.
        #     [attr="value"]  easy to distinguish attr and value
        #     [attr=value]    attr pattern will probably match value text
        # The only way to distinguish the two is that values are always preceded
        # by "attribute matchers" (e.g. ~=, ^=, $=, *=, =). Since we can't use
        # lookbehind to check for this, instead we scan for the matcher first.
        # We push a new context on the stack when we find it. The new context
        # will only match text on the right side of the '=' symbol (the value
        # text). In this way we can fake positive lookbehind.
        - match: '{{attr_matcher}}'
          scope: keyword.operator.attribute-selector.css
          push:
            - match: '(?=])'
              pop: true
            - include: string
            - match: '\b[iI]{{b}}'
              scope: support.constant.attr-modifier.css
            - match: '({{identifier}})\s*(?=[i\]])'
              captures:
                1: string.unquoted.attribute-value.css
        - match: '{{wq_name}}'
          captures:
            1: entity.other.attribute-name.namespace.css
            2: entity.other.attribute-name.namespace.wildcard.css
            3: punctuation.separator.namespace.css
            4: entity.other.attribute-name.css
            5: entity.other.attribute-name.wildcard.css

  selector-class:
    - match: '(\.){{identifier}}'
      captures:
        0: entity.other.attribute-name.class.css
        1: punctuation.definition.entity.css

  selector-combinator:
    - match: '{{combinator}}(?![>+~|])'
      scope: keyword.operator.combinator.css
    - match: '{{combinator}}{2,}'
      scope: keyword.operator.combinator.css invalid.illegal.combinator.css

  selector-custom:
    - match: '(:--){{identifier}}'
      captures:
        0: string.unquoted.custom-selector.css
        1: punctuation.definition.entity.css

  selector-id:
    - match: '(#){{identifier}}'
      captures:
        0: entity.other.attribute-name.id.css
        1: punctuation.definition.entity.css

  selector-keyframes:
    - match: '\b(?:to|from){{b}}'
      scope: entity.other.attribute-name.keyframes-selector.css
    - include: percentage-zero-to-100

  selector-nesting:
    - match: '&'
      scope: entity.name.tag.nesting-selector.css
    - match: '(@)nest{{b}}'
      captures:
        0: keyword.control.at-rule.nest.css
        1: punctuation.definition.keyword.css

  selector-page:
    # This rule prevents identifier from matching text after the ':' while you're
    # typing a page selector like :left.
    - match: ':'
      scope: entity.other.attribute-name.pseudo-class.css punctuation.definition.entity.css
      push:
        - include: selector-page-pseudo-class
        - meta_scope: meta.selector.page.css
        - match: '(?=[:{])'
          pop: true
    - include: identifier

  selector-page-pseudo-class:
    - match: '(?:verso|right|recto|left|first|blank){{b}}'
      scope: entity.other.attribute-name.pseudo-class.css

  selector-pseudo-class:
    # Match pseudo-class functions first to avoid collisions between
    # pseudo-classes like :drop and :drop().
    - include: selector-pseudo-class-func
    - include: selector-pseudo-class-deprecated
    - match: '(?x)
        (:)
        (?:
          visited|
          valid|
          user-invalid|
          target-within|
          target|
          scope|
          root|
          required|
          read-write|
          read-only|
          playing|
          placeholder-shown|
          paused|
          past|
          out-of-range|
          optional|
          only-of-type|
          only-child|
          local-link|
          link|
          last-of-type|
          last-child|
          invalid|
          input-placeholder|
          indeterminate|
          in-range|
          hover|
          host|
          future|
          fullscreen|
          focus-within|
          focus-visible|
          focus|
          first-of-type|
          first-child|
          enabled|
          empty|
          drop|
          disabled|
          default|
          current|
          checked|
          blank|
          any-link|
          active|
          -webkit-input-placeholder|
          -ms-input-placeholder|
          -moz-any-link
        )
        {{b}}'
        # TODO: Remove input-placeholder. It's non-standard, but commonly used.
        # It has been replaced by :placeholder-shown, which is not widely
        # supported yet.
      captures:
        0: entity.other.attribute-name.pseudo-class.css
        1: punctuation.definition.entity.pseudo-class.css
    - include: selector-pseudo-class-invalid

  selector-pseudo-class-deprecated:
    - match: '(?x)
        (:)
        {{vendor_prefix}}
        (?:
          first-line|
          first-letter|
          bound-element|
          before|
          after
        )
        {{b}}'
      captures:
        0: entity.other.attribute-name.pseudo-class.css invalid.deprecated.css
        1: punctuation.definition.entity.pseudo-class.css

  selector-pseudo-class-dir:
    - match: ((:)dir)(\()
      captures:
        1: entity.other.attribute-name.pseudo-class.css
        2: punctuation.definition.entity.pseudo-class.css
        3: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.pseudo-class.dir.css
        - include: end-func
        - include: func-var
        - match: \b(?:rtl|ltr)\b
          scope: support.constant.property-value.css
    - include: stray-paren

  selector-pseudo-class-drop:
    - match: ((:)drop)(\()
      captures:
        1: entity.other.attribute-name.pseudo-class.css
        2: punctuation.definition.entity.pseudo-class.css
        3: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.pseudo-class.drop.css
        - include: end-func
        - include: func-var
        - match: \b(?:valid|invalid|active)\b
          scope: support.constant.property-value.css
    - include: stray-paren

  selector-pseudo-class-func:
    - include: selector-pseudo-class-dir
    - include: selector-pseudo-class-drop
    - include: selector-pseudo-class-host
    - include: selector-pseudo-class-lang
    - include: selector-pseudo-class-not-matches-has
    - include: selector-pseudo-class-nth-child
    - include: selector-pseudo-class-nth-column-nth-type
    - include: selector-pseudo-class-scope-context

  selector-pseudo-class-host:
    - match: ((:)host(?:-context)?)(\()
      captures:
        1: entity.other.attribute-name.pseudo-class.css
        2: punctuation.definition.entity.pseudo-class.css
        3: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.pseudo-class.host.css
        - include: end-func
        - include: selector-simple-compound
    - include: stray-paren

  # Match selector text that starts with ":" but isn't on the list of valid
  # pseudo-classes. This prevents the text from being mistakenly matched by
  # another context, like the type selector.
  selector-pseudo-class-invalid:
    - match: '(:)[\w-]+'
      captures:
        # Don't apply a scope to the whole match so it won't be highlighted.
        1: punctuation.definition.entity.pseudo-class.css

  selector-pseudo-class-lang:
    - match: ((:)lang)(\()
      captures:
        1: entity.other.attribute-name.pseudo-class.css
        2: punctuation.definition.entity.pseudo-class.css
        3: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.pseudo-class.lang.css
        - include: end-func
        - include: func-var
        - match: '[*a-zA-Z0-9-]+'
          scope: support.constant.property-value.css
    - include: stray-paren

  selector-pseudo-class-not-matches-has:
    - match: '((:)(?:not|matches|has))(\()'
      captures:
        1: entity.other.attribute-name.pseudo-class.css
        2: punctuation.definition.entity.pseudo-class.css
        3: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.pseudo-class.not-matches-has.css
        - include: end-func
        - include: selector-list
    - include: stray-paren

  selector-pseudo-class-nth-child:
    - match: '((:)(?:nth-last-child|nth-child))(\()'
      captures:
        1: entity.other.attribute-name.pseudo-class.css
        2: punctuation.definition.entity.pseudo-class.css
        3: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.pseudo-class.nth-child.css
        - include: end-func
        - include: func-var
        - match: '\bof{{b}}'
          scope: support.constant.property-value.css
        - include: an-plus-b
        - include: selector-list
    - include: stray-paren

  selector-pseudo-class-nth-column-nth-type:
    - match: '(?x)
      (
        (:)
        (?:
          nth-of-type|
          nth-last-of-type|
          nth-last-col|
          nth-col
        )
      )
      (\()'
      captures:
        1: entity.other.attribute-name.pseudo-class.css
        2: punctuation.definition.entity.pseudo-class.css
        3: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.pseudo-class.nth.css
        - include: end-func
        - include: func-var
        - include: an-plus-b
    - include: stray-paren

  selector-pseudo-class-scope-context:
    - match: ((:)scope-context)(\()
      captures:
        1: entity.other.attribute-name.pseudo-class.css
        2: punctuation.definition.entity.pseudo-class.css
        3: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.pseudo-class.scope-context.css
        - include: end-func
        - include: selector-list
    - include: stray-paren

  selector-pseudo-element:
    - match: '(?x)
        (::)
        (?:
          spelling-error|
          shadow|
          selection|
          region|
          placeholder|
          marker|
          inactive-selection|
          grammar-error|
          first-line|
          first-letter|
          content|
          before|
          backdrop|
          after|
          -webkit-input-placeholder|
          -ms-input-placeholder|
          -moz-selection|
          -moz-placeholder
        )
        {{b}}'
      captures:
        0: entity.other.attribute-name.pseudo-element.css
        1: punctuation.definition.entity.pseudo-element.css
    - include: selector-pseudo-element-slotted
    - include: selector-pseudo-element-slot-blank
    - include: selector-pseudo-element-attr
    - include: selector-pseudo-element-invalid

  selector-pseudo-element-attr:
    - match: '((::)attr)(\()'
      captures:
        1: entity.other.attribute-name.pseudo-element.css
        2: punctuation.definition.entity.pseudo-element.css
        3: punctuation.section.function.begin.css
      push:
        # The attr-pseudo-element name is necessary to distinguish from the
        # other attr() function.
        - meta_scope: meta.function.pseudo-element.attr-pseudo-element.css
        - include: end-func
        - include: func-var
        # The <wq-name> pattern is close enough to the <namespace-attr> pattern
        # defined in Non-element Selectors Module Level 1.
        # https://drafts.csswg.org/selectors-nonelement/#attribute-node-selectors
        - match: '{{wq_name}}'
          captures:
            1: string.unquoted.namespace.css
            2: string.unquoted.namespace.wildcard.css
            3: punctuation.separator.namespace.css
            4: entity.name.tag.css
            5: entity.name.tag.wildcard.css
    - include: stray-paren

  # Match selector text that starts with "::" but isn't on the list of valid
  # pseudo-elements. This prevents the text from being mistakenly matched by
  # another context, like the type selector.
  selector-pseudo-element-invalid:
    - match: '(::)[\w-]+'
      captures:
        # Don't apply a scope to the whole match so it won't be highlighted.
        1: punctuation.definition.entity.pseudo-element.css

  selector-pseudo-element-slot-blank:
    - match: '((::)(?:slot|blank))(\()'
      captures:
        1: entity.other.attribute-name.pseudo-element.css
        2: punctuation.definition.entity.pseudo-element.css
        3: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.pseudo-element.slot-blank.css
        - include: end-func
        - match: '[a-z*.]'
          scope: string.unquoted.identifier.css
    - include: stray-paren

  selector-pseudo-element-slotted:
    - match: '((::)slotted)(\()'
      captures:
        1: entity.other.attribute-name.pseudo-element.css
        2: punctuation.definition.entity.pseudo-element.css
        3: punctuation.section.function.begin.css
      push:
        - meta_scope: meta.function.pseudo-element.slotted.css
        - include: end-func
        - include: selector-simple-compound
    - include: stray-paren

  # This matches simple selectors and compound selectors, which are just one
  # or more simple selectors.
  selector-simple-compound:
    - include: selector-pseudo-element
    - include: selector-pseudo-class
    - include: selector-id
    - include: selector-class
    - include: selector-attribute
    # Match selector-type last because this includes custom elements, which
    # match nonspecific identifiers.
    - include: selector-type

  selector-type:
    - include: selector-type-deprecated
    - match: '(?x)
        (?:
          {{wq_name}}|
          {{ns_prefix}}(\*)
        )'
      captures:
        1: string.unquoted.namespace.css
        2: string.unquoted.namespace.wildcard.css
        3: punctuation.separator.namespace.css
        4: entity.name.tag.css
        5: entity.name.tag.wildcard.css
        6: string.unquoted.namespace.css
        7: string.unquoted.namespace.wildcard.css
        8: punctuation.separator.namespace.css
        9: entity.name.tag.wildcard.css

  selector-type-deprecated:
    - match: '(?x)
        \b
        (?:
          xmp|
          tt|
          strike|
          spacer|
          plaintext|
          noframes|
          noembed|
          nobr|
          nextid|
          multicol|
          menuitem|
          menu|
          marquee|
          listing|
          keygen|
          isindex|
          hgroup|
          frameset|
          frame|
          font|
          dir|
          center|
          blink|
          big|
          bgsound|
          basefont|
          applet|
          acronym
        )
        {{b}}'
      scope: entity.name.tag.css invalid.deprecated.css

  self-position:
    - match: '(?x)
        \b
        (?:
          start|
          self-start|
          self-end|
          flex-start|
          flex-end|
          end|
          center
        )
        {{b}}'
      scope: support.constant.property-value.css

  semitones:
    - include: func-calc
    - match: '(?x)
        (?:
          ({{number}})({{semitones_unit}})\b|
          ({{zero}})(?![-.\w%])
        )'
      captures:
        1: constant.numeric.css
        2: keyword.other.unit.css
        3: constant.numeric.css

  shape-arg:
    - include: percentage
    - include: length

  shape-box:
    - include: box
    - match: '\bmargin-box{{b}}'
      scope: support.constant.property-value.css

  shape-radius:
    - match: '\b(?:farthest-side|closest-side){{b}}'
      scope: support.constant.property-value.css
    - include: percentage
    - include: length

  side-or-corner:
    - match: '\b(?:top|right|left|bottom){{b}}'
      scope: support.constant.property-value.css

  single-animation-composition:
    - match: '\b(?:replace|add|accumulate){{b}}'
      scope: support.constant.property-value.css

  single-animation-direction:
    - match: '(?x)
        \b
        (?:
          reverse|
          normal|
          alternate-reverse|
          alternate
        )
        {{b}}'
      scope: support.constant.property-value.css

  single-animation-fill-mode:
    - match: '(?x)
        \b
        (?:
          none|
          forwards|
          both|
          backwards
        )
        {{b}}'
      scope: support.constant.property-value.css

  single-animation-iteration-count:
    - match: '\binfinite{{b}}'
      scope: support.constant.property-value.css
    - include: number

  single-animation-play-state:
    - match: '\b(?:running|paused){{b}}'
      scope: support.constant.property-value.css

  single-timing-function:
    - include: frames-timing-function
    - include: cubic-bezier-timing-function
    - include: step-timing-function
    - match: '\blinear{{b}}'
      scope: support.constant.property-value.css

  single-transition:
    - include: single-timing-function
    - match: '\b(?:none|all){{b}}'
      scope: support.constant.property-value.css
    - include: time
    - include: identifier

  size:
    - include: extent-keyword
    - include: percentage-non-negative
    - include: length-non-negative

  step-timing-function:
    - include: func-steps
    - match: '\b(?:step-start|step-end){{b}}'

  stray-brace:
    - match: '}'
      scope: invalid.illegal.stray-brace.css

  stray-paren:
    - match: \)
      scope: invalid.illegal.stray-paren.css

  stray-paren-or-semicolon:
    - include: stray-semicolon
    - include: stray-paren

  stray-semicolon:
    - match: ';'
      scope: invalid.illegal.stray-semicolon.css

  string:
    - include: string-double
    - include: string-single

  string-double:
    - match: '"'
      scope: punctuation.definition.string.begin.css
      push:
        # /* inside string should not match as comment
        - meta_include_prototype: false
        - meta_scope: string.quoted.double.css
        - match: '"'
          scope: punctuation.definition.string.end.css
          pop: true
        - include: escape

  string-single:
    - meta_include_prototype: false
    - match: "'"
      scope: punctuation.definition.string.begin.css
      push:
        # /* inside string should not match as comment
        - meta_include_prototype: false
        - meta_scope: string.quoted.single.css
        - match: "'"
          scope: punctuation.definition.string.end.css
          pop: true
        - include: escape

  supports-condition:
    - match: '\('
      scope: punctuation.section.supports-condition.begin.css
      push:
        - meta_scope: meta.supports-condition.css
        - match: '\)'
          scope: punctuation.section.supports-condition.end.css
          pop: true
        - include: supports-condition
        - include: supports-condition-operator
        - include: properties
    - include: stray-paren

  symbol:
    - include: string
    - include: image
    - include: identifier

  supports-condition-operator:
    - match: \b(?:or|not|and){{b}}
      scope: keyword.operator.logic.at-supports.css

  target:
    - include: func-target-counters
    - include: func-target-text

  time:
    - include: func-calc
    - match: '(?x)
        (?:
          ({{number}})({{time_unit}})\b|
          ({{zero}})(?![-.\w%])
        )'
      captures:
        1: constant.numeric.css
        2: keyword.other.unit.css
        3: constant.numeric.css

  track-list:
    - include: track-repeat
    - include: track-size
    - include: line-names

  track-repeat:
    - include: func-repeat

  track-size:
    - include: func-minmax
    - include: func-fit-content
    - match: '\b(?:min-content|max-content|auto){{b}}'
      scope: support.constant.property-value.css
    - include: flex-non-negative
    - include: percentage-non-negative
    - include: length-non-negative

  transform-list:
    - include: func-matrix
    - include: func-perspective
    - include: func-rotate3d
    - include: func-rotate
    - include: func-scale
    - include: func-skew
    - include: func-translate-z
    - include: func-translate

  type-or-unit:
    - match: '(?x)
        \b
        (?:
          url|
          time|
          string|
          number|
          length|
          integer|
          frequency|
          color|
          angle|
          {{angle_unit}}|
          {{frequency_unit}}|
          {{decibel_unit}}|
          {{length_unit}}|
          {{percentage_unit}}|
          {{time_unit}}
        )
        {{b}}'
      scope: support.constant.property-value.css

  value-calc:
    - include: func-var
    - include: length
    - include: frequency
    - include: angle
    - include: time
    - include: percentage
    - include: number
    - include: arithmetic-operator

  # This context matches CSS-wide keywords and functions, like "inherit",
  # "var()", and "!important". It should be included in all property contexts.
  value-css-wide:
    - include: func-var
    # TODO: write these? they are at-risk.
    # - include: func-attr
    # - include: func-toggle
    - match: '!important'
      scope: keyword.other.important.css
    - match: '\b(?:unset|revert|inherit|initial){{b}}'
      scope: support.constant.property-value.css

  viewport-length:
    - match: '\b(?:extend-to-zoom|auto){{b}}'
      scope: support.constant.property-value.css
    - include: percentage-non-negative
    - include: length-non-negative

  voice-name:
    - include: string
    - include: identifier

  width:
    - include: func-fit-content
    - match: '\b(?:min-content|max-content|fit-content|fill){{b}}'
      scope: support.constant.property-value.css
